

#pragma once

#ifndef GO_MOC_H
#define GO_MOC_H

#include <stdint.h>

#ifdef __cplusplus
class CtxObject721036;
void CtxObject721036_CtxObject721036_QRegisterMetaTypes();
class CustomLabel721036;
void CustomLabel721036_CustomLabel721036_QRegisterMetaTypes();
extern "C" {
#endif

struct Moc_PackedString { char* data; long long len; };
struct Moc_PackedList { void* data; long long len; };
void CtxObject721036_ConnectClicked(void* ptr);
void CtxObject721036_DisconnectClicked(void* ptr);
void CtxObject721036_Clicked(void* ptr, int b);
struct Moc_PackedString CtxObject721036_Remote(void* ptr);
struct Moc_PackedString CtxObject721036_RemoteDefault(void* ptr);
void CtxObject721036_SetRemote(void* ptr, struct Moc_PackedString remote);
void CtxObject721036_SetRemoteDefault(void* ptr, struct Moc_PackedString remote);
void CtxObject721036_ConnectRemoteChanged(void* ptr);
void CtxObject721036_DisconnectRemoteChanged(void* ptr);
void CtxObject721036_RemoteChanged(void* ptr, struct Moc_PackedString remote);
struct Moc_PackedString CtxObject721036_Transport(void* ptr);
struct Moc_PackedString CtxObject721036_TransportDefault(void* ptr);
void CtxObject721036_SetTransport(void* ptr, struct Moc_PackedString transport);
void CtxObject721036_SetTransportDefault(void* ptr, struct Moc_PackedString transport);
void CtxObject721036_ConnectTransportChanged(void* ptr);
void CtxObject721036_DisconnectTransportChanged(void* ptr);
void CtxObject721036_TransportChanged(void* ptr, struct Moc_PackedString transport);
struct Moc_PackedString CtxObject721036_Endpoint(void* ptr);
struct Moc_PackedString CtxObject721036_EndpointDefault(void* ptr);
void CtxObject721036_SetEndpoint(void* ptr, struct Moc_PackedString endpoint);
void CtxObject721036_SetEndpointDefault(void* ptr, struct Moc_PackedString endpoint);
void CtxObject721036_ConnectEndpointChanged(void* ptr);
void CtxObject721036_DisconnectEndpointChanged(void* ptr);
void CtxObject721036_EndpointChanged(void* ptr, struct Moc_PackedString endpoint);
struct Moc_PackedString CtxObject721036_From(void* ptr);
struct Moc_PackedString CtxObject721036_FromDefault(void* ptr);
void CtxObject721036_SetFrom(void* ptr, struct Moc_PackedString from);
void CtxObject721036_SetFromDefault(void* ptr, struct Moc_PackedString from);
void CtxObject721036_ConnectFromChanged(void* ptr);
void CtxObject721036_DisconnectFromChanged(void* ptr);
void CtxObject721036_FromChanged(void* ptr, struct Moc_PackedString from);
struct Moc_PackedString CtxObject721036_Message(void* ptr);
struct Moc_PackedString CtxObject721036_MessageDefault(void* ptr);
void CtxObject721036_SetMessage(void* ptr, struct Moc_PackedString message);
void CtxObject721036_SetMessageDefault(void* ptr, struct Moc_PackedString message);
void CtxObject721036_ConnectMessageChanged(void* ptr);
void CtxObject721036_DisconnectMessageChanged(void* ptr);
void CtxObject721036_MessageChanged(void* ptr, struct Moc_PackedString message);
struct Moc_PackedString CtxObject721036_RawData(void* ptr);
struct Moc_PackedString CtxObject721036_RawDataDefault(void* ptr);
void CtxObject721036_SetRawData(void* ptr, struct Moc_PackedString rawData);
void CtxObject721036_SetRawDataDefault(void* ptr, struct Moc_PackedString rawData);
void CtxObject721036_ConnectRawDataChanged(void* ptr);
void CtxObject721036_DisconnectRawDataChanged(void* ptr);
void CtxObject721036_RawDataChanged(void* ptr, struct Moc_PackedString rawData);
struct Moc_PackedString CtxObject721036_Hash(void* ptr);
struct Moc_PackedString CtxObject721036_HashDefault(void* ptr);
void CtxObject721036_SetHash(void* ptr, struct Moc_PackedString hash);
void CtxObject721036_SetHashDefault(void* ptr, struct Moc_PackedString hash);
void CtxObject721036_ConnectHashChanged(void* ptr);
void CtxObject721036_DisconnectHashChanged(void* ptr);
void CtxObject721036_HashChanged(void* ptr, struct Moc_PackedString hash);
int CtxObject721036_CtxObject721036_QRegisterMetaType();
int CtxObject721036_CtxObject721036_QRegisterMetaType2(char* typeName);
int CtxObject721036_CtxObject721036_QmlRegisterType();
int CtxObject721036_CtxObject721036_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* CtxObject721036___dynamicPropertyNames_atList(void* ptr, int i);
void CtxObject721036___dynamicPropertyNames_setList(void* ptr, void* i);
void* CtxObject721036___dynamicPropertyNames_newList(void* ptr);
void* CtxObject721036___findChildren_atList2(void* ptr, int i);
void CtxObject721036___findChildren_setList2(void* ptr, void* i);
void* CtxObject721036___findChildren_newList2(void* ptr);
void* CtxObject721036___findChildren_atList3(void* ptr, int i);
void CtxObject721036___findChildren_setList3(void* ptr, void* i);
void* CtxObject721036___findChildren_newList3(void* ptr);
void* CtxObject721036___findChildren_atList(void* ptr, int i);
void CtxObject721036___findChildren_setList(void* ptr, void* i);
void* CtxObject721036___findChildren_newList(void* ptr);
void* CtxObject721036___children_atList(void* ptr, int i);
void CtxObject721036___children_setList(void* ptr, void* i);
void* CtxObject721036___children_newList(void* ptr);
void* CtxObject721036_NewCtxObject(void* parent);
void CtxObject721036_DestroyCtxObject(void* ptr);
void CtxObject721036_DestroyCtxObjectDefault(void* ptr);
char CtxObject721036_EventDefault(void* ptr, void* e);
char CtxObject721036_EventFilterDefault(void* ptr, void* watched, void* event);
void CtxObject721036_ChildEventDefault(void* ptr, void* event);
void CtxObject721036_ConnectNotifyDefault(void* ptr, void* sign);
void CtxObject721036_CustomEventDefault(void* ptr, void* event);
void CtxObject721036_DeleteLaterDefault(void* ptr);
void CtxObject721036_DisconnectNotifyDefault(void* ptr, void* sign);
void CtxObject721036_TimerEventDefault(void* ptr, void* event);
;
void CustomLabel721036_ConnectUpdateText(void* ptr);
void CustomLabel721036_DisconnectUpdateText(void* ptr);
void CustomLabel721036_UpdateText(void* ptr, struct Moc_PackedString v0);
int CustomLabel721036_CustomLabel721036_QRegisterMetaType();
int CustomLabel721036_CustomLabel721036_QRegisterMetaType2(char* typeName);
int CustomLabel721036_CustomLabel721036_QmlRegisterType();
int CustomLabel721036_CustomLabel721036_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* CustomLabel721036___addActions_actions_atList(void* ptr, int i);
void CustomLabel721036___addActions_actions_setList(void* ptr, void* i);
void* CustomLabel721036___addActions_actions_newList(void* ptr);
void* CustomLabel721036___insertActions_actions_atList(void* ptr, int i);
void CustomLabel721036___insertActions_actions_setList(void* ptr, void* i);
void* CustomLabel721036___insertActions_actions_newList(void* ptr);
void* CustomLabel721036___actions_atList(void* ptr, int i);
void CustomLabel721036___actions_setList(void* ptr, void* i);
void* CustomLabel721036___actions_newList(void* ptr);
void* CustomLabel721036___dynamicPropertyNames_atList(void* ptr, int i);
void CustomLabel721036___dynamicPropertyNames_setList(void* ptr, void* i);
void* CustomLabel721036___dynamicPropertyNames_newList(void* ptr);
void* CustomLabel721036___findChildren_atList2(void* ptr, int i);
void CustomLabel721036___findChildren_setList2(void* ptr, void* i);
void* CustomLabel721036___findChildren_newList2(void* ptr);
void* CustomLabel721036___findChildren_atList3(void* ptr, int i);
void CustomLabel721036___findChildren_setList3(void* ptr, void* i);
void* CustomLabel721036___findChildren_newList3(void* ptr);
void* CustomLabel721036___findChildren_atList(void* ptr, int i);
void CustomLabel721036___findChildren_setList(void* ptr, void* i);
void* CustomLabel721036___findChildren_newList(void* ptr);
void* CustomLabel721036___children_atList(void* ptr, int i);
void CustomLabel721036___children_setList(void* ptr, void* i);
void* CustomLabel721036___children_newList(void* ptr);
void* CustomLabel721036_NewCustomLabel(void* parent, long long fo);
void* CustomLabel721036_NewCustomLabel2(struct Moc_PackedString text, void* parent, long long fo);
void CustomLabel721036_DestroyCustomLabel(void* ptr);
void CustomLabel721036_DestroyCustomLabelDefault(void* ptr);
char CustomLabel721036_EventDefault(void* ptr, void* e);
char CustomLabel721036_FocusNextPrevChildDefault(void* ptr, char next);
void CustomLabel721036_ChangeEventDefault(void* ptr, void* ev);
void CustomLabel721036_ClearDefault(void* ptr);
void CustomLabel721036_ContextMenuEventDefault(void* ptr, void* ev);
void CustomLabel721036_FocusInEventDefault(void* ptr, void* ev);
void CustomLabel721036_FocusOutEventDefault(void* ptr, void* ev);
void CustomLabel721036_KeyPressEventDefault(void* ptr, void* ev);
void CustomLabel721036_MouseMoveEventDefault(void* ptr, void* ev);
void CustomLabel721036_MousePressEventDefault(void* ptr, void* ev);
void CustomLabel721036_MouseReleaseEventDefault(void* ptr, void* ev);
void CustomLabel721036_PaintEventDefault(void* ptr, void* vqp);
void CustomLabel721036_SetMovieDefault(void* ptr, void* movie);
void CustomLabel721036_SetNum2Default(void* ptr, double num);
void CustomLabel721036_SetNumDefault(void* ptr, int num);
void CustomLabel721036_SetPictureDefault(void* ptr, void* picture);
void CustomLabel721036_SetPixmapDefault(void* ptr, void* vqp);
void CustomLabel721036_SetTextDefault(void* ptr, struct Moc_PackedString vqs);
void* CustomLabel721036_MinimumSizeHintDefault(void* ptr);
void* CustomLabel721036_SizeHintDefault(void* ptr);
;
int CustomLabel721036_HeightForWidthDefault(void* ptr, int w);
char CustomLabel721036_CloseDefault(void* ptr);
void CustomLabel721036_ActionEventDefault(void* ptr, void* event);
void CustomLabel721036_CloseEventDefault(void* ptr, void* event);
void CustomLabel721036_DragEnterEventDefault(void* ptr, void* event);
void CustomLabel721036_DragLeaveEventDefault(void* ptr, void* event);
void CustomLabel721036_DragMoveEventDefault(void* ptr, void* event);
void CustomLabel721036_DropEventDefault(void* ptr, void* event);
void CustomLabel721036_EnterEventDefault(void* ptr, void* event);
void CustomLabel721036_HideDefault(void* ptr);
void CustomLabel721036_HideEventDefault(void* ptr, void* event);
void CustomLabel721036_InputMethodEventDefault(void* ptr, void* event);
void CustomLabel721036_KeyReleaseEventDefault(void* ptr, void* event);
void CustomLabel721036_LeaveEventDefault(void* ptr, void* event);
void CustomLabel721036_LowerDefault(void* ptr);
void CustomLabel721036_MouseDoubleClickEventDefault(void* ptr, void* event);
void CustomLabel721036_MoveEventDefault(void* ptr, void* event);
void CustomLabel721036_RaiseDefault(void* ptr);
void CustomLabel721036_RepaintDefault(void* ptr);
void CustomLabel721036_ResizeEventDefault(void* ptr, void* event);
void CustomLabel721036_SetDisabledDefault(void* ptr, char disable);
void CustomLabel721036_SetEnabledDefault(void* ptr, char vbo);
void CustomLabel721036_SetFocus2Default(void* ptr);
void CustomLabel721036_SetHiddenDefault(void* ptr, char hidden);
void CustomLabel721036_SetStyleSheetDefault(void* ptr, struct Moc_PackedString styleSheet);
void CustomLabel721036_SetVisibleDefault(void* ptr, char visible);
void CustomLabel721036_SetWindowModifiedDefault(void* ptr, char vbo);
void CustomLabel721036_SetWindowTitleDefault(void* ptr, struct Moc_PackedString vqs);
void CustomLabel721036_ShowDefault(void* ptr);
void CustomLabel721036_ShowEventDefault(void* ptr, void* event);
void CustomLabel721036_ShowFullScreenDefault(void* ptr);
void CustomLabel721036_ShowMaximizedDefault(void* ptr);
void CustomLabel721036_ShowMinimizedDefault(void* ptr);
void CustomLabel721036_ShowNormalDefault(void* ptr);
void CustomLabel721036_TabletEventDefault(void* ptr, void* event);
void CustomLabel721036_UpdateDefault(void* ptr);
void CustomLabel721036_UpdateMicroFocusDefault(void* ptr);
void CustomLabel721036_WheelEventDefault(void* ptr, void* event);
void* CustomLabel721036_PaintEngineDefault(void* ptr);
void* CustomLabel721036_InputMethodQueryDefault(void* ptr, long long query);
char CustomLabel721036_HasHeightForWidthDefault(void* ptr);
int CustomLabel721036_MetricDefault(void* ptr, long long m);
void CustomLabel721036_InitPainterDefault(void* ptr, void* painter);
char CustomLabel721036_EventFilterDefault(void* ptr, void* watched, void* event);
void CustomLabel721036_ChildEventDefault(void* ptr, void* event);
void CustomLabel721036_ConnectNotifyDefault(void* ptr, void* sign);
void CustomLabel721036_CustomEventDefault(void* ptr, void* event);
void CustomLabel721036_DeleteLaterDefault(void* ptr);
void CustomLabel721036_DisconnectNotifyDefault(void* ptr, void* sign);
void CustomLabel721036_TimerEventDefault(void* ptr, void* event);

#ifdef __cplusplus
}
#endif

#endif