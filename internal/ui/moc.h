

#pragma once

#ifndef GO_MOC_H
#define GO_MOC_H

#include <stdint.h>

#ifdef __cplusplus
class ApproveListingCtx721036;
void ApproveListingCtx721036_ApproveListingCtx721036_QRegisterMetaTypes();
class ApproveSignDataCtx721036;
void ApproveSignDataCtx721036_ApproveSignDataCtx721036_QRegisterMetaTypes();
class CustomListModel721036;
void CustomListModel721036_CustomListModel721036_QRegisterMetaTypes();
extern "C" {
#endif

struct Moc_PackedString { char* data; long long len; };
struct Moc_PackedList { void* data; long long len; };
struct Moc_PackedString ApproveListingCtx721036_Remote(void* ptr);
struct Moc_PackedString ApproveListingCtx721036_RemoteDefault(void* ptr);
void ApproveListingCtx721036_SetRemote(void* ptr, struct Moc_PackedString remote);
void ApproveListingCtx721036_SetRemoteDefault(void* ptr, struct Moc_PackedString remote);
void ApproveListingCtx721036_ConnectRemoteChanged(void* ptr);
void ApproveListingCtx721036_DisconnectRemoteChanged(void* ptr);
void ApproveListingCtx721036_RemoteChanged(void* ptr, struct Moc_PackedString remote);
struct Moc_PackedString ApproveListingCtx721036_Transport(void* ptr);
struct Moc_PackedString ApproveListingCtx721036_TransportDefault(void* ptr);
void ApproveListingCtx721036_SetTransport(void* ptr, struct Moc_PackedString transport);
void ApproveListingCtx721036_SetTransportDefault(void* ptr, struct Moc_PackedString transport);
void ApproveListingCtx721036_ConnectTransportChanged(void* ptr);
void ApproveListingCtx721036_DisconnectTransportChanged(void* ptr);
void ApproveListingCtx721036_TransportChanged(void* ptr, struct Moc_PackedString transport);
struct Moc_PackedString ApproveListingCtx721036_Endpoint(void* ptr);
struct Moc_PackedString ApproveListingCtx721036_EndpointDefault(void* ptr);
void ApproveListingCtx721036_SetEndpoint(void* ptr, struct Moc_PackedString endpoint);
void ApproveListingCtx721036_SetEndpointDefault(void* ptr, struct Moc_PackedString endpoint);
void ApproveListingCtx721036_ConnectEndpointChanged(void* ptr);
void ApproveListingCtx721036_DisconnectEndpointChanged(void* ptr);
void ApproveListingCtx721036_EndpointChanged(void* ptr, struct Moc_PackedString endpoint);
struct Moc_PackedString ApproveListingCtx721036_From(void* ptr);
struct Moc_PackedString ApproveListingCtx721036_FromDefault(void* ptr);
void ApproveListingCtx721036_SetFrom(void* ptr, struct Moc_PackedString from);
void ApproveListingCtx721036_SetFromDefault(void* ptr, struct Moc_PackedString from);
void ApproveListingCtx721036_ConnectFromChanged(void* ptr);
void ApproveListingCtx721036_DisconnectFromChanged(void* ptr);
void ApproveListingCtx721036_FromChanged(void* ptr, struct Moc_PackedString from);
struct Moc_PackedString ApproveListingCtx721036_Message(void* ptr);
struct Moc_PackedString ApproveListingCtx721036_MessageDefault(void* ptr);
void ApproveListingCtx721036_SetMessage(void* ptr, struct Moc_PackedString message);
void ApproveListingCtx721036_SetMessageDefault(void* ptr, struct Moc_PackedString message);
void ApproveListingCtx721036_ConnectMessageChanged(void* ptr);
void ApproveListingCtx721036_DisconnectMessageChanged(void* ptr);
void ApproveListingCtx721036_MessageChanged(void* ptr, struct Moc_PackedString message);
struct Moc_PackedString ApproveListingCtx721036_RawData(void* ptr);
struct Moc_PackedString ApproveListingCtx721036_RawDataDefault(void* ptr);
void ApproveListingCtx721036_SetRawData(void* ptr, struct Moc_PackedString rawData);
void ApproveListingCtx721036_SetRawDataDefault(void* ptr, struct Moc_PackedString rawData);
void ApproveListingCtx721036_ConnectRawDataChanged(void* ptr);
void ApproveListingCtx721036_DisconnectRawDataChanged(void* ptr);
void ApproveListingCtx721036_RawDataChanged(void* ptr, struct Moc_PackedString rawData);
struct Moc_PackedString ApproveListingCtx721036_Hash(void* ptr);
struct Moc_PackedString ApproveListingCtx721036_HashDefault(void* ptr);
void ApproveListingCtx721036_SetHash(void* ptr, struct Moc_PackedString hash);
void ApproveListingCtx721036_SetHashDefault(void* ptr, struct Moc_PackedString hash);
void ApproveListingCtx721036_ConnectHashChanged(void* ptr);
void ApproveListingCtx721036_DisconnectHashChanged(void* ptr);
void ApproveListingCtx721036_HashChanged(void* ptr, struct Moc_PackedString hash);
int ApproveListingCtx721036_ApproveListingCtx721036_QRegisterMetaType();
int ApproveListingCtx721036_ApproveListingCtx721036_QRegisterMetaType2(char* typeName);
int ApproveListingCtx721036_ApproveListingCtx721036_QmlRegisterType();
int ApproveListingCtx721036_ApproveListingCtx721036_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* ApproveListingCtx721036___dynamicPropertyNames_atList(void* ptr, int i);
void ApproveListingCtx721036___dynamicPropertyNames_setList(void* ptr, void* i);
void* ApproveListingCtx721036___dynamicPropertyNames_newList(void* ptr);
void* ApproveListingCtx721036___findChildren_atList2(void* ptr, int i);
void ApproveListingCtx721036___findChildren_setList2(void* ptr, void* i);
void* ApproveListingCtx721036___findChildren_newList2(void* ptr);
void* ApproveListingCtx721036___findChildren_atList3(void* ptr, int i);
void ApproveListingCtx721036___findChildren_setList3(void* ptr, void* i);
void* ApproveListingCtx721036___findChildren_newList3(void* ptr);
void* ApproveListingCtx721036___findChildren_atList(void* ptr, int i);
void ApproveListingCtx721036___findChildren_setList(void* ptr, void* i);
void* ApproveListingCtx721036___findChildren_newList(void* ptr);
void* ApproveListingCtx721036___children_atList(void* ptr, int i);
void ApproveListingCtx721036___children_setList(void* ptr, void* i);
void* ApproveListingCtx721036___children_newList(void* ptr);
void* ApproveListingCtx721036_NewApproveListingCtx(void* parent);
void ApproveListingCtx721036_DestroyApproveListingCtx(void* ptr);
void ApproveListingCtx721036_DestroyApproveListingCtxDefault(void* ptr);
char ApproveListingCtx721036_EventDefault(void* ptr, void* e);
char ApproveListingCtx721036_EventFilterDefault(void* ptr, void* watched, void* event);
void ApproveListingCtx721036_ChildEventDefault(void* ptr, void* event);
void ApproveListingCtx721036_ConnectNotifyDefault(void* ptr, void* sign);
void ApproveListingCtx721036_CustomEventDefault(void* ptr, void* event);
void ApproveListingCtx721036_DeleteLaterDefault(void* ptr);
void ApproveListingCtx721036_DisconnectNotifyDefault(void* ptr, void* sign);
void ApproveListingCtx721036_TimerEventDefault(void* ptr, void* event);
;
void ApproveSignDataCtx721036_ConnectClicked(void* ptr);
void ApproveSignDataCtx721036_DisconnectClicked(void* ptr);
void ApproveSignDataCtx721036_Clicked(void* ptr, int b);
struct Moc_PackedString ApproveSignDataCtx721036_Remote(void* ptr);
struct Moc_PackedString ApproveSignDataCtx721036_RemoteDefault(void* ptr);
void ApproveSignDataCtx721036_SetRemote(void* ptr, struct Moc_PackedString remote);
void ApproveSignDataCtx721036_SetRemoteDefault(void* ptr, struct Moc_PackedString remote);
void ApproveSignDataCtx721036_ConnectRemoteChanged(void* ptr);
void ApproveSignDataCtx721036_DisconnectRemoteChanged(void* ptr);
void ApproveSignDataCtx721036_RemoteChanged(void* ptr, struct Moc_PackedString remote);
struct Moc_PackedString ApproveSignDataCtx721036_Transport(void* ptr);
struct Moc_PackedString ApproveSignDataCtx721036_TransportDefault(void* ptr);
void ApproveSignDataCtx721036_SetTransport(void* ptr, struct Moc_PackedString transport);
void ApproveSignDataCtx721036_SetTransportDefault(void* ptr, struct Moc_PackedString transport);
void ApproveSignDataCtx721036_ConnectTransportChanged(void* ptr);
void ApproveSignDataCtx721036_DisconnectTransportChanged(void* ptr);
void ApproveSignDataCtx721036_TransportChanged(void* ptr, struct Moc_PackedString transport);
struct Moc_PackedString ApproveSignDataCtx721036_Endpoint(void* ptr);
struct Moc_PackedString ApproveSignDataCtx721036_EndpointDefault(void* ptr);
void ApproveSignDataCtx721036_SetEndpoint(void* ptr, struct Moc_PackedString endpoint);
void ApproveSignDataCtx721036_SetEndpointDefault(void* ptr, struct Moc_PackedString endpoint);
void ApproveSignDataCtx721036_ConnectEndpointChanged(void* ptr);
void ApproveSignDataCtx721036_DisconnectEndpointChanged(void* ptr);
void ApproveSignDataCtx721036_EndpointChanged(void* ptr, struct Moc_PackedString endpoint);
struct Moc_PackedString ApproveSignDataCtx721036_From(void* ptr);
struct Moc_PackedString ApproveSignDataCtx721036_FromDefault(void* ptr);
void ApproveSignDataCtx721036_SetFrom(void* ptr, struct Moc_PackedString from);
void ApproveSignDataCtx721036_SetFromDefault(void* ptr, struct Moc_PackedString from);
void ApproveSignDataCtx721036_ConnectFromChanged(void* ptr);
void ApproveSignDataCtx721036_DisconnectFromChanged(void* ptr);
void ApproveSignDataCtx721036_FromChanged(void* ptr, struct Moc_PackedString from);
struct Moc_PackedString ApproveSignDataCtx721036_Message(void* ptr);
struct Moc_PackedString ApproveSignDataCtx721036_MessageDefault(void* ptr);
void ApproveSignDataCtx721036_SetMessage(void* ptr, struct Moc_PackedString message);
void ApproveSignDataCtx721036_SetMessageDefault(void* ptr, struct Moc_PackedString message);
void ApproveSignDataCtx721036_ConnectMessageChanged(void* ptr);
void ApproveSignDataCtx721036_DisconnectMessageChanged(void* ptr);
void ApproveSignDataCtx721036_MessageChanged(void* ptr, struct Moc_PackedString message);
struct Moc_PackedString ApproveSignDataCtx721036_RawData(void* ptr);
struct Moc_PackedString ApproveSignDataCtx721036_RawDataDefault(void* ptr);
void ApproveSignDataCtx721036_SetRawData(void* ptr, struct Moc_PackedString rawData);
void ApproveSignDataCtx721036_SetRawDataDefault(void* ptr, struct Moc_PackedString rawData);
void ApproveSignDataCtx721036_ConnectRawDataChanged(void* ptr);
void ApproveSignDataCtx721036_DisconnectRawDataChanged(void* ptr);
void ApproveSignDataCtx721036_RawDataChanged(void* ptr, struct Moc_PackedString rawData);
struct Moc_PackedString ApproveSignDataCtx721036_Hash(void* ptr);
struct Moc_PackedString ApproveSignDataCtx721036_HashDefault(void* ptr);
void ApproveSignDataCtx721036_SetHash(void* ptr, struct Moc_PackedString hash);
void ApproveSignDataCtx721036_SetHashDefault(void* ptr, struct Moc_PackedString hash);
void ApproveSignDataCtx721036_ConnectHashChanged(void* ptr);
void ApproveSignDataCtx721036_DisconnectHashChanged(void* ptr);
void ApproveSignDataCtx721036_HashChanged(void* ptr, struct Moc_PackedString hash);
int ApproveSignDataCtx721036_ApproveSignDataCtx721036_QRegisterMetaType();
int ApproveSignDataCtx721036_ApproveSignDataCtx721036_QRegisterMetaType2(char* typeName);
int ApproveSignDataCtx721036_ApproveSignDataCtx721036_QmlRegisterType();
int ApproveSignDataCtx721036_ApproveSignDataCtx721036_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* ApproveSignDataCtx721036___dynamicPropertyNames_atList(void* ptr, int i);
void ApproveSignDataCtx721036___dynamicPropertyNames_setList(void* ptr, void* i);
void* ApproveSignDataCtx721036___dynamicPropertyNames_newList(void* ptr);
void* ApproveSignDataCtx721036___findChildren_atList2(void* ptr, int i);
void ApproveSignDataCtx721036___findChildren_setList2(void* ptr, void* i);
void* ApproveSignDataCtx721036___findChildren_newList2(void* ptr);
void* ApproveSignDataCtx721036___findChildren_atList3(void* ptr, int i);
void ApproveSignDataCtx721036___findChildren_setList3(void* ptr, void* i);
void* ApproveSignDataCtx721036___findChildren_newList3(void* ptr);
void* ApproveSignDataCtx721036___findChildren_atList(void* ptr, int i);
void ApproveSignDataCtx721036___findChildren_setList(void* ptr, void* i);
void* ApproveSignDataCtx721036___findChildren_newList(void* ptr);
void* ApproveSignDataCtx721036___children_atList(void* ptr, int i);
void ApproveSignDataCtx721036___children_setList(void* ptr, void* i);
void* ApproveSignDataCtx721036___children_newList(void* ptr);
void* ApproveSignDataCtx721036_NewApproveSignDataCtx(void* parent);
void ApproveSignDataCtx721036_DestroyApproveSignDataCtx(void* ptr);
void ApproveSignDataCtx721036_DestroyApproveSignDataCtxDefault(void* ptr);
char ApproveSignDataCtx721036_EventDefault(void* ptr, void* e);
char ApproveSignDataCtx721036_EventFilterDefault(void* ptr, void* watched, void* event);
void ApproveSignDataCtx721036_ChildEventDefault(void* ptr, void* event);
void ApproveSignDataCtx721036_ConnectNotifyDefault(void* ptr, void* sign);
void ApproveSignDataCtx721036_CustomEventDefault(void* ptr, void* event);
void ApproveSignDataCtx721036_DeleteLaterDefault(void* ptr);
void ApproveSignDataCtx721036_DisconnectNotifyDefault(void* ptr, void* sign);
void ApproveSignDataCtx721036_TimerEventDefault(void* ptr, void* event);
;
void CustomListModel721036_ConnectClear(void* ptr);
void CustomListModel721036_DisconnectClear(void* ptr);
void CustomListModel721036_Clear(void* ptr);
void CustomListModel721036_ConnectAdd(void* ptr);
void CustomListModel721036_DisconnectAdd(void* ptr);
void CustomListModel721036_Add(void* ptr, uintptr_t account);
void CustomListModel721036_ConnectClicked(void* ptr);
void CustomListModel721036_DisconnectClicked(void* ptr);
void CustomListModel721036_Clicked(void* ptr, int b);
int CustomListModel721036_CustomListModel721036_QRegisterMetaType();
int CustomListModel721036_CustomListModel721036_QRegisterMetaType2(char* typeName);
int CustomListModel721036_CustomListModel721036_QmlRegisterType();
int CustomListModel721036_CustomListModel721036_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int CustomListModel721036_____setItemData_roles_keyList_atList(void* ptr, int i);
void CustomListModel721036_____setItemData_roles_keyList_setList(void* ptr, int i);
void* CustomListModel721036_____setItemData_roles_keyList_newList(void* ptr);
int CustomListModel721036_____roleNames_keyList_atList(void* ptr, int i);
void CustomListModel721036_____roleNames_keyList_setList(void* ptr, int i);
void* CustomListModel721036_____roleNames_keyList_newList(void* ptr);
int CustomListModel721036_____itemData_keyList_atList(void* ptr, int i);
void CustomListModel721036_____itemData_keyList_setList(void* ptr, int i);
void* CustomListModel721036_____itemData_keyList_newList(void* ptr);
void* CustomListModel721036___setItemData_roles_atList(void* ptr, int v, int i);
void CustomListModel721036___setItemData_roles_setList(void* ptr, int key, void* i);
void* CustomListModel721036___setItemData_roles_newList(void* ptr);
struct Moc_PackedList CustomListModel721036___setItemData_roles_keyList(void* ptr);
void* CustomListModel721036___changePersistentIndexList_from_atList(void* ptr, int i);
void CustomListModel721036___changePersistentIndexList_from_setList(void* ptr, void* i);
void* CustomListModel721036___changePersistentIndexList_from_newList(void* ptr);
void* CustomListModel721036___changePersistentIndexList_to_atList(void* ptr, int i);
void CustomListModel721036___changePersistentIndexList_to_setList(void* ptr, void* i);
void* CustomListModel721036___changePersistentIndexList_to_newList(void* ptr);
int CustomListModel721036___dataChanged_roles_atList(void* ptr, int i);
void CustomListModel721036___dataChanged_roles_setList(void* ptr, int i);
void* CustomListModel721036___dataChanged_roles_newList(void* ptr);
void* CustomListModel721036___layoutAboutToBeChanged_parents_atList(void* ptr, int i);
void CustomListModel721036___layoutAboutToBeChanged_parents_setList(void* ptr, void* i);
void* CustomListModel721036___layoutAboutToBeChanged_parents_newList(void* ptr);
void* CustomListModel721036___layoutChanged_parents_atList(void* ptr, int i);
void CustomListModel721036___layoutChanged_parents_setList(void* ptr, void* i);
void* CustomListModel721036___layoutChanged_parents_newList(void* ptr);
void* CustomListModel721036___roleNames_atList(void* ptr, int v, int i);
void CustomListModel721036___roleNames_setList(void* ptr, int key, void* i);
void* CustomListModel721036___roleNames_newList(void* ptr);
struct Moc_PackedList CustomListModel721036___roleNames_keyList(void* ptr);
void* CustomListModel721036___itemData_atList(void* ptr, int v, int i);
void CustomListModel721036___itemData_setList(void* ptr, int key, void* i);
void* CustomListModel721036___itemData_newList(void* ptr);
struct Moc_PackedList CustomListModel721036___itemData_keyList(void* ptr);
void* CustomListModel721036___mimeData_indexes_atList(void* ptr, int i);
void CustomListModel721036___mimeData_indexes_setList(void* ptr, void* i);
void* CustomListModel721036___mimeData_indexes_newList(void* ptr);
void* CustomListModel721036___match_atList(void* ptr, int i);
void CustomListModel721036___match_setList(void* ptr, void* i);
void* CustomListModel721036___match_newList(void* ptr);
void* CustomListModel721036___persistentIndexList_atList(void* ptr, int i);
void CustomListModel721036___persistentIndexList_setList(void* ptr, void* i);
void* CustomListModel721036___persistentIndexList_newList(void* ptr);
int CustomListModel721036_____doSetRoleNames_roleNames_keyList_atList(void* ptr, int i);
void CustomListModel721036_____doSetRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* CustomListModel721036_____doSetRoleNames_roleNames_keyList_newList(void* ptr);
int CustomListModel721036_____setRoleNames_roleNames_keyList_atList(void* ptr, int i);
void CustomListModel721036_____setRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* CustomListModel721036_____setRoleNames_roleNames_keyList_newList(void* ptr);
void* CustomListModel721036___dynamicPropertyNames_atList(void* ptr, int i);
void CustomListModel721036___dynamicPropertyNames_setList(void* ptr, void* i);
void* CustomListModel721036___dynamicPropertyNames_newList(void* ptr);
void* CustomListModel721036___findChildren_atList2(void* ptr, int i);
void CustomListModel721036___findChildren_setList2(void* ptr, void* i);
void* CustomListModel721036___findChildren_newList2(void* ptr);
void* CustomListModel721036___findChildren_atList3(void* ptr, int i);
void CustomListModel721036___findChildren_setList3(void* ptr, void* i);
void* CustomListModel721036___findChildren_newList3(void* ptr);
void* CustomListModel721036___findChildren_atList(void* ptr, int i);
void CustomListModel721036___findChildren_setList(void* ptr, void* i);
void* CustomListModel721036___findChildren_newList(void* ptr);
void* CustomListModel721036___children_atList(void* ptr, int i);
void CustomListModel721036___children_setList(void* ptr, void* i);
void* CustomListModel721036___children_newList(void* ptr);
void* CustomListModel721036_NewCustomListModel(void* parent);
void CustomListModel721036_DestroyCustomListModel(void* ptr);
void CustomListModel721036_DestroyCustomListModelDefault(void* ptr);
char CustomListModel721036_DropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
void* CustomListModel721036_IndexDefault(void* ptr, int row, int column, void* parent);
void* CustomListModel721036_SiblingDefault(void* ptr, int row, int column, void* idx);
long long CustomListModel721036_FlagsDefault(void* ptr, void* index);
;
char CustomListModel721036_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char CustomListModel721036_InsertRowsDefault(void* ptr, int row, int count, void* parent);
char CustomListModel721036_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char CustomListModel721036_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
char CustomListModel721036_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char CustomListModel721036_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
char CustomListModel721036_SetDataDefault(void* ptr, void* index, void* value, int role);
char CustomListModel721036_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
char CustomListModel721036_SetItemDataDefault(void* ptr, void* index, void* roles);
char CustomListModel721036_SubmitDefault(void* ptr);
void CustomListModel721036_FetchMoreDefault(void* ptr, void* parent);
void CustomListModel721036_ResetInternalDataDefault(void* ptr);
void CustomListModel721036_RevertDefault(void* ptr);
void CustomListModel721036_SortDefault(void* ptr, int column, long long order);
struct Moc_PackedList CustomListModel721036_RoleNamesDefault(void* ptr);
struct Moc_PackedList CustomListModel721036_ItemDataDefault(void* ptr, void* index);
void* CustomListModel721036_MimeDataDefault(void* ptr, void* indexes);
void* CustomListModel721036_BuddyDefault(void* ptr, void* index);
void* CustomListModel721036_ParentDefault(void* ptr, void* index);
struct Moc_PackedList CustomListModel721036_MatchDefault(void* ptr, void* start, int role, void* value, int hits, long long flags);
void* CustomListModel721036_SpanDefault(void* ptr, void* index);
struct Moc_PackedString CustomListModel721036_MimeTypesDefault(void* ptr);
void* CustomListModel721036_DataDefault(void* ptr, void* index, int role);
void* CustomListModel721036_HeaderDataDefault(void* ptr, int section, long long orientation, int role);
long long CustomListModel721036_SupportedDragActionsDefault(void* ptr);
long long CustomListModel721036_SupportedDropActionsDefault(void* ptr);
char CustomListModel721036_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char CustomListModel721036_CanFetchMoreDefault(void* ptr, void* parent);
char CustomListModel721036_HasChildrenDefault(void* ptr, void* parent);
int CustomListModel721036_ColumnCountDefault(void* ptr, void* parent);
int CustomListModel721036_RowCountDefault(void* ptr, void* parent);
char CustomListModel721036_EventDefault(void* ptr, void* e);
char CustomListModel721036_EventFilterDefault(void* ptr, void* watched, void* event);
void CustomListModel721036_ChildEventDefault(void* ptr, void* event);
void CustomListModel721036_ConnectNotifyDefault(void* ptr, void* sign);
void CustomListModel721036_CustomEventDefault(void* ptr, void* event);
void CustomListModel721036_DeleteLaterDefault(void* ptr);
void CustomListModel721036_DisconnectNotifyDefault(void* ptr, void* sign);
void CustomListModel721036_TimerEventDefault(void* ptr, void* event);

#ifdef __cplusplus
}
#endif

#endif