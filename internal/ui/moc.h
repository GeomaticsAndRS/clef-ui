

#pragma once

#ifndef GO_MOC_77da62_H
#define GO_MOC_77da62_H

#include <stdint.h>

#ifdef __cplusplus
class TxListCtx77da62;
void TxListCtx77da62_TxListCtx77da62_QRegisterMetaTypes();
class ApproveListingCtx77da62;
void ApproveListingCtx77da62_ApproveListingCtx77da62_QRegisterMetaTypes();
class ApproveNewAccountCtx77da62;
void ApproveNewAccountCtx77da62_ApproveNewAccountCtx77da62_QRegisterMetaTypes();
class ApproveSignDataCtx77da62;
void ApproveSignDataCtx77da62_ApproveSignDataCtx77da62_QRegisterMetaTypes();
class ApproveTxCtx77da62;
void ApproveTxCtx77da62_ApproveTxCtx77da62_QRegisterMetaTypes();
class CustomListModel77da62;
void CustomListModel77da62_CustomListModel77da62_QRegisterMetaTypes();
class LoginCtx77da62;
void LoginCtx77da62_LoginCtx77da62_QRegisterMetaTypes();
class TxListAccountsModel77da62;
void TxListAccountsModel77da62_TxListAccountsModel77da62_QRegisterMetaTypes();
class TxListModel77da62;
void TxListModel77da62_TxListModel77da62_QRegisterMetaTypes();
extern "C" {
#endif

struct Moc_PackedString { char* data; long long len; };
struct Moc_PackedList { void* data; long long len; };
void ApproveListingCtx77da62_ConnectBack(void* ptr);
void ApproveListingCtx77da62_DisconnectBack(void* ptr);
void ApproveListingCtx77da62_Back(void* ptr);
void ApproveListingCtx77da62_ConnectApprove(void* ptr);
void ApproveListingCtx77da62_DisconnectApprove(void* ptr);
void ApproveListingCtx77da62_Approve(void* ptr);
void ApproveListingCtx77da62_ConnectReject(void* ptr);
void ApproveListingCtx77da62_DisconnectReject(void* ptr);
void ApproveListingCtx77da62_Reject(void* ptr);
void ApproveListingCtx77da62_ConnectOnCheckStateChanged(void* ptr);
void ApproveListingCtx77da62_DisconnectOnCheckStateChanged(void* ptr);
void ApproveListingCtx77da62_OnCheckStateChanged(void* ptr, int i, char checked);
void ApproveListingCtx77da62_ConnectTriggerUpdate(void* ptr);
void ApproveListingCtx77da62_DisconnectTriggerUpdate(void* ptr);
void ApproveListingCtx77da62_TriggerUpdate(void* ptr);
struct Moc_PackedString ApproveListingCtx77da62_Remote(void* ptr);
struct Moc_PackedString ApproveListingCtx77da62_RemoteDefault(void* ptr);
void ApproveListingCtx77da62_SetRemote(void* ptr, struct Moc_PackedString remote);
void ApproveListingCtx77da62_SetRemoteDefault(void* ptr, struct Moc_PackedString remote);
void ApproveListingCtx77da62_ConnectRemoteChanged(void* ptr);
void ApproveListingCtx77da62_DisconnectRemoteChanged(void* ptr);
void ApproveListingCtx77da62_RemoteChanged(void* ptr, struct Moc_PackedString remote);
struct Moc_PackedString ApproveListingCtx77da62_Transport(void* ptr);
struct Moc_PackedString ApproveListingCtx77da62_TransportDefault(void* ptr);
void ApproveListingCtx77da62_SetTransport(void* ptr, struct Moc_PackedString transport);
void ApproveListingCtx77da62_SetTransportDefault(void* ptr, struct Moc_PackedString transport);
void ApproveListingCtx77da62_ConnectTransportChanged(void* ptr);
void ApproveListingCtx77da62_DisconnectTransportChanged(void* ptr);
void ApproveListingCtx77da62_TransportChanged(void* ptr, struct Moc_PackedString transport);
struct Moc_PackedString ApproveListingCtx77da62_Endpoint(void* ptr);
struct Moc_PackedString ApproveListingCtx77da62_EndpointDefault(void* ptr);
void ApproveListingCtx77da62_SetEndpoint(void* ptr, struct Moc_PackedString endpoint);
void ApproveListingCtx77da62_SetEndpointDefault(void* ptr, struct Moc_PackedString endpoint);
void ApproveListingCtx77da62_ConnectEndpointChanged(void* ptr);
void ApproveListingCtx77da62_DisconnectEndpointChanged(void* ptr);
void ApproveListingCtx77da62_EndpointChanged(void* ptr, struct Moc_PackedString endpoint);
struct Moc_PackedString ApproveListingCtx77da62_From(void* ptr);
struct Moc_PackedString ApproveListingCtx77da62_FromDefault(void* ptr);
void ApproveListingCtx77da62_SetFrom(void* ptr, struct Moc_PackedString from);
void ApproveListingCtx77da62_SetFromDefault(void* ptr, struct Moc_PackedString from);
void ApproveListingCtx77da62_ConnectFromChanged(void* ptr);
void ApproveListingCtx77da62_DisconnectFromChanged(void* ptr);
void ApproveListingCtx77da62_FromChanged(void* ptr, struct Moc_PackedString from);
struct Moc_PackedString ApproveListingCtx77da62_Message(void* ptr);
struct Moc_PackedString ApproveListingCtx77da62_MessageDefault(void* ptr);
void ApproveListingCtx77da62_SetMessage(void* ptr, struct Moc_PackedString message);
void ApproveListingCtx77da62_SetMessageDefault(void* ptr, struct Moc_PackedString message);
void ApproveListingCtx77da62_ConnectMessageChanged(void* ptr);
void ApproveListingCtx77da62_DisconnectMessageChanged(void* ptr);
void ApproveListingCtx77da62_MessageChanged(void* ptr, struct Moc_PackedString message);
struct Moc_PackedString ApproveListingCtx77da62_RawData(void* ptr);
struct Moc_PackedString ApproveListingCtx77da62_RawDataDefault(void* ptr);
void ApproveListingCtx77da62_SetRawData(void* ptr, struct Moc_PackedString rawData);
void ApproveListingCtx77da62_SetRawDataDefault(void* ptr, struct Moc_PackedString rawData);
void ApproveListingCtx77da62_ConnectRawDataChanged(void* ptr);
void ApproveListingCtx77da62_DisconnectRawDataChanged(void* ptr);
void ApproveListingCtx77da62_RawDataChanged(void* ptr, struct Moc_PackedString rawData);
struct Moc_PackedString ApproveListingCtx77da62_Hash(void* ptr);
struct Moc_PackedString ApproveListingCtx77da62_HashDefault(void* ptr);
void ApproveListingCtx77da62_SetHash(void* ptr, struct Moc_PackedString hash);
void ApproveListingCtx77da62_SetHashDefault(void* ptr, struct Moc_PackedString hash);
void ApproveListingCtx77da62_ConnectHashChanged(void* ptr);
void ApproveListingCtx77da62_DisconnectHashChanged(void* ptr);
void ApproveListingCtx77da62_HashChanged(void* ptr, struct Moc_PackedString hash);
int ApproveListingCtx77da62_ApproveListingCtx77da62_QRegisterMetaType();
int ApproveListingCtx77da62_ApproveListingCtx77da62_QRegisterMetaType2(char* typeName);
int ApproveListingCtx77da62_ApproveListingCtx77da62_QmlRegisterType();
int ApproveListingCtx77da62_ApproveListingCtx77da62_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* ApproveListingCtx77da62___dynamicPropertyNames_atList(void* ptr, int i);
void ApproveListingCtx77da62___dynamicPropertyNames_setList(void* ptr, void* i);
void* ApproveListingCtx77da62___dynamicPropertyNames_newList(void* ptr);
void* ApproveListingCtx77da62___findChildren_atList2(void* ptr, int i);
void ApproveListingCtx77da62___findChildren_setList2(void* ptr, void* i);
void* ApproveListingCtx77da62___findChildren_newList2(void* ptr);
void* ApproveListingCtx77da62___findChildren_atList3(void* ptr, int i);
void ApproveListingCtx77da62___findChildren_setList3(void* ptr, void* i);
void* ApproveListingCtx77da62___findChildren_newList3(void* ptr);
void* ApproveListingCtx77da62___findChildren_atList(void* ptr, int i);
void ApproveListingCtx77da62___findChildren_setList(void* ptr, void* i);
void* ApproveListingCtx77da62___findChildren_newList(void* ptr);
void* ApproveListingCtx77da62___children_atList(void* ptr, int i);
void ApproveListingCtx77da62___children_setList(void* ptr, void* i);
void* ApproveListingCtx77da62___children_newList(void* ptr);
void* ApproveListingCtx77da62_NewApproveListingCtx(void* parent);
void ApproveListingCtx77da62_DestroyApproveListingCtx(void* ptr);
void ApproveListingCtx77da62_DestroyApproveListingCtxDefault(void* ptr);
char ApproveListingCtx77da62_EventDefault(void* ptr, void* e);
char ApproveListingCtx77da62_EventFilterDefault(void* ptr, void* watched, void* event);
void ApproveListingCtx77da62_ChildEventDefault(void* ptr, void* event);
void ApproveListingCtx77da62_ConnectNotifyDefault(void* ptr, void* sign);
void ApproveListingCtx77da62_CustomEventDefault(void* ptr, void* event);
void ApproveListingCtx77da62_DeleteLaterDefault(void* ptr);
void ApproveListingCtx77da62_DisconnectNotifyDefault(void* ptr, void* sign);
void ApproveListingCtx77da62_TimerEventDefault(void* ptr, void* event);
;
void ApproveTxCtx77da62_ConnectApprove(void* ptr);
void ApproveTxCtx77da62_DisconnectApprove(void* ptr);
void ApproveTxCtx77da62_Approve(void* ptr);
void ApproveTxCtx77da62_ConnectReject(void* ptr);
void ApproveTxCtx77da62_DisconnectReject(void* ptr);
void ApproveTxCtx77da62_Reject(void* ptr);
void ApproveTxCtx77da62_ConnectCheckTxDiff(void* ptr);
void ApproveTxCtx77da62_DisconnectCheckTxDiff(void* ptr);
void ApproveTxCtx77da62_CheckTxDiff(void* ptr);
void ApproveTxCtx77da62_ConnectBack(void* ptr);
void ApproveTxCtx77da62_DisconnectBack(void* ptr);
void ApproveTxCtx77da62_Back(void* ptr);
void ApproveTxCtx77da62_ConnectEdited(void* ptr);
void ApproveTxCtx77da62_DisconnectEdited(void* ptr);
void ApproveTxCtx77da62_Edited(void* ptr, struct Moc_PackedString s, struct Moc_PackedString v);
void ApproveTxCtx77da62_ConnectChangeValueUnit(void* ptr);
void ApproveTxCtx77da62_DisconnectChangeValueUnit(void* ptr);
void ApproveTxCtx77da62_ChangeValueUnit(void* ptr, int v);
void ApproveTxCtx77da62_ConnectChangeGasPriceUnit(void* ptr);
void ApproveTxCtx77da62_DisconnectChangeGasPriceUnit(void* ptr);
void ApproveTxCtx77da62_ChangeGasPriceUnit(void* ptr, int v);
int ApproveTxCtx77da62_ValueUnit(void* ptr);
int ApproveTxCtx77da62_ValueUnitDefault(void* ptr);
void ApproveTxCtx77da62_SetValueUnit(void* ptr, int valueUnit);
void ApproveTxCtx77da62_SetValueUnitDefault(void* ptr, int valueUnit);
void ApproveTxCtx77da62_ConnectValueUnitChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectValueUnitChanged(void* ptr);
void ApproveTxCtx77da62_ValueUnitChanged(void* ptr, int valueUnit);
struct Moc_PackedString ApproveTxCtx77da62_Remote(void* ptr);
struct Moc_PackedString ApproveTxCtx77da62_RemoteDefault(void* ptr);
void ApproveTxCtx77da62_SetRemote(void* ptr, struct Moc_PackedString remote);
void ApproveTxCtx77da62_SetRemoteDefault(void* ptr, struct Moc_PackedString remote);
void ApproveTxCtx77da62_ConnectRemoteChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectRemoteChanged(void* ptr);
void ApproveTxCtx77da62_RemoteChanged(void* ptr, struct Moc_PackedString remote);
struct Moc_PackedString ApproveTxCtx77da62_Transport(void* ptr);
struct Moc_PackedString ApproveTxCtx77da62_TransportDefault(void* ptr);
void ApproveTxCtx77da62_SetTransport(void* ptr, struct Moc_PackedString transport);
void ApproveTxCtx77da62_SetTransportDefault(void* ptr, struct Moc_PackedString transport);
void ApproveTxCtx77da62_ConnectTransportChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectTransportChanged(void* ptr);
void ApproveTxCtx77da62_TransportChanged(void* ptr, struct Moc_PackedString transport);
struct Moc_PackedString ApproveTxCtx77da62_Endpoint(void* ptr);
struct Moc_PackedString ApproveTxCtx77da62_EndpointDefault(void* ptr);
void ApproveTxCtx77da62_SetEndpoint(void* ptr, struct Moc_PackedString endpoint);
void ApproveTxCtx77da62_SetEndpointDefault(void* ptr, struct Moc_PackedString endpoint);
void ApproveTxCtx77da62_ConnectEndpointChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectEndpointChanged(void* ptr);
void ApproveTxCtx77da62_EndpointChanged(void* ptr, struct Moc_PackedString endpoint);
struct Moc_PackedString ApproveTxCtx77da62_Data(void* ptr);
struct Moc_PackedString ApproveTxCtx77da62_DataDefault(void* ptr);
void ApproveTxCtx77da62_SetData(void* ptr, struct Moc_PackedString data);
void ApproveTxCtx77da62_SetDataDefault(void* ptr, struct Moc_PackedString data);
void ApproveTxCtx77da62_ConnectDataChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectDataChanged(void* ptr);
void ApproveTxCtx77da62_DataChanged(void* ptr, struct Moc_PackedString data);
struct Moc_PackedString ApproveTxCtx77da62_From(void* ptr);
struct Moc_PackedString ApproveTxCtx77da62_FromDefault(void* ptr);
void ApproveTxCtx77da62_SetFrom(void* ptr, struct Moc_PackedString from);
void ApproveTxCtx77da62_SetFromDefault(void* ptr, struct Moc_PackedString from);
void ApproveTxCtx77da62_ConnectFromChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectFromChanged(void* ptr);
void ApproveTxCtx77da62_FromChanged(void* ptr, struct Moc_PackedString from);
struct Moc_PackedString ApproveTxCtx77da62_FromWarning(void* ptr);
struct Moc_PackedString ApproveTxCtx77da62_FromWarningDefault(void* ptr);
void ApproveTxCtx77da62_SetFromWarning(void* ptr, struct Moc_PackedString fromWarning);
void ApproveTxCtx77da62_SetFromWarningDefault(void* ptr, struct Moc_PackedString fromWarning);
void ApproveTxCtx77da62_ConnectFromWarningChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectFromWarningChanged(void* ptr);
void ApproveTxCtx77da62_FromWarningChanged(void* ptr, struct Moc_PackedString fromWarning);
char ApproveTxCtx77da62_IsFromVisible(void* ptr);
char ApproveTxCtx77da62_IsFromVisibleDefault(void* ptr);
void ApproveTxCtx77da62_SetFromVisible(void* ptr, char fromVisible);
void ApproveTxCtx77da62_SetFromVisibleDefault(void* ptr, char fromVisible);
void ApproveTxCtx77da62_ConnectFromVisibleChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectFromVisibleChanged(void* ptr);
void ApproveTxCtx77da62_FromVisibleChanged(void* ptr, char fromVisible);
struct Moc_PackedString ApproveTxCtx77da62_To(void* ptr);
struct Moc_PackedString ApproveTxCtx77da62_ToDefault(void* ptr);
void ApproveTxCtx77da62_SetTo(void* ptr, struct Moc_PackedString to);
void ApproveTxCtx77da62_SetToDefault(void* ptr, struct Moc_PackedString to);
void ApproveTxCtx77da62_ConnectToChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectToChanged(void* ptr);
void ApproveTxCtx77da62_ToChanged(void* ptr, struct Moc_PackedString to);
struct Moc_PackedString ApproveTxCtx77da62_ToWarning(void* ptr);
struct Moc_PackedString ApproveTxCtx77da62_ToWarningDefault(void* ptr);
void ApproveTxCtx77da62_SetToWarning(void* ptr, struct Moc_PackedString toWarning);
void ApproveTxCtx77da62_SetToWarningDefault(void* ptr, struct Moc_PackedString toWarning);
void ApproveTxCtx77da62_ConnectToWarningChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectToWarningChanged(void* ptr);
void ApproveTxCtx77da62_ToWarningChanged(void* ptr, struct Moc_PackedString toWarning);
char ApproveTxCtx77da62_IsToVisible(void* ptr);
char ApproveTxCtx77da62_IsToVisibleDefault(void* ptr);
void ApproveTxCtx77da62_SetToVisible(void* ptr, char toVisible);
void ApproveTxCtx77da62_SetToVisibleDefault(void* ptr, char toVisible);
void ApproveTxCtx77da62_ConnectToVisibleChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectToVisibleChanged(void* ptr);
void ApproveTxCtx77da62_ToVisibleChanged(void* ptr, char toVisible);
struct Moc_PackedString ApproveTxCtx77da62_Gas(void* ptr);
struct Moc_PackedString ApproveTxCtx77da62_GasDefault(void* ptr);
void ApproveTxCtx77da62_SetGas(void* ptr, struct Moc_PackedString gas);
void ApproveTxCtx77da62_SetGasDefault(void* ptr, struct Moc_PackedString gas);
void ApproveTxCtx77da62_ConnectGasChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectGasChanged(void* ptr);
void ApproveTxCtx77da62_GasChanged(void* ptr, struct Moc_PackedString gas);
struct Moc_PackedString ApproveTxCtx77da62_GasPrice(void* ptr);
struct Moc_PackedString ApproveTxCtx77da62_GasPriceDefault(void* ptr);
void ApproveTxCtx77da62_SetGasPrice(void* ptr, struct Moc_PackedString gasPrice);
void ApproveTxCtx77da62_SetGasPriceDefault(void* ptr, struct Moc_PackedString gasPrice);
void ApproveTxCtx77da62_ConnectGasPriceChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectGasPriceChanged(void* ptr);
void ApproveTxCtx77da62_GasPriceChanged(void* ptr, struct Moc_PackedString gasPrice);
int ApproveTxCtx77da62_GasPriceUnit(void* ptr);
int ApproveTxCtx77da62_GasPriceUnitDefault(void* ptr);
void ApproveTxCtx77da62_SetGasPriceUnit(void* ptr, int gasPriceUnit);
void ApproveTxCtx77da62_SetGasPriceUnitDefault(void* ptr, int gasPriceUnit);
void ApproveTxCtx77da62_ConnectGasPriceUnitChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectGasPriceUnitChanged(void* ptr);
void ApproveTxCtx77da62_GasPriceUnitChanged(void* ptr, int gasPriceUnit);
struct Moc_PackedString ApproveTxCtx77da62_Nonce(void* ptr);
struct Moc_PackedString ApproveTxCtx77da62_NonceDefault(void* ptr);
void ApproveTxCtx77da62_SetNonce(void* ptr, struct Moc_PackedString nonce);
void ApproveTxCtx77da62_SetNonceDefault(void* ptr, struct Moc_PackedString nonce);
void ApproveTxCtx77da62_ConnectNonceChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectNonceChanged(void* ptr);
void ApproveTxCtx77da62_NonceChanged(void* ptr, struct Moc_PackedString nonce);
struct Moc_PackedString ApproveTxCtx77da62_Value(void* ptr);
struct Moc_PackedString ApproveTxCtx77da62_ValueDefault(void* ptr);
void ApproveTxCtx77da62_SetValue(void* ptr, struct Moc_PackedString value);
void ApproveTxCtx77da62_SetValueDefault(void* ptr, struct Moc_PackedString value);
void ApproveTxCtx77da62_ConnectValueChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectValueChanged(void* ptr);
void ApproveTxCtx77da62_ValueChanged(void* ptr, struct Moc_PackedString value);
struct Moc_PackedString ApproveTxCtx77da62_Password(void* ptr);
struct Moc_PackedString ApproveTxCtx77da62_PasswordDefault(void* ptr);
void ApproveTxCtx77da62_SetPassword(void* ptr, struct Moc_PackedString password);
void ApproveTxCtx77da62_SetPasswordDefault(void* ptr, struct Moc_PackedString password);
void ApproveTxCtx77da62_ConnectPasswordChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectPasswordChanged(void* ptr);
void ApproveTxCtx77da62_PasswordChanged(void* ptr, struct Moc_PackedString password);
struct Moc_PackedString ApproveTxCtx77da62_FromSrc(void* ptr);
struct Moc_PackedString ApproveTxCtx77da62_FromSrcDefault(void* ptr);
void ApproveTxCtx77da62_SetFromSrc(void* ptr, struct Moc_PackedString fromSrc);
void ApproveTxCtx77da62_SetFromSrcDefault(void* ptr, struct Moc_PackedString fromSrc);
void ApproveTxCtx77da62_ConnectFromSrcChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectFromSrcChanged(void* ptr);
void ApproveTxCtx77da62_FromSrcChanged(void* ptr, struct Moc_PackedString fromSrc);
struct Moc_PackedString ApproveTxCtx77da62_ToSrc(void* ptr);
struct Moc_PackedString ApproveTxCtx77da62_ToSrcDefault(void* ptr);
void ApproveTxCtx77da62_SetToSrc(void* ptr, struct Moc_PackedString toSrc);
void ApproveTxCtx77da62_SetToSrcDefault(void* ptr, struct Moc_PackedString toSrc);
void ApproveTxCtx77da62_ConnectToSrcChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectToSrcChanged(void* ptr);
void ApproveTxCtx77da62_ToSrcChanged(void* ptr, struct Moc_PackedString toSrc);
struct Moc_PackedString ApproveTxCtx77da62_Diff(void* ptr);
struct Moc_PackedString ApproveTxCtx77da62_DiffDefault(void* ptr);
void ApproveTxCtx77da62_SetDiff(void* ptr, struct Moc_PackedString diff);
void ApproveTxCtx77da62_SetDiffDefault(void* ptr, struct Moc_PackedString diff);
void ApproveTxCtx77da62_ConnectDiffChanged(void* ptr);
void ApproveTxCtx77da62_DisconnectDiffChanged(void* ptr);
void ApproveTxCtx77da62_DiffChanged(void* ptr, struct Moc_PackedString diff);
int ApproveTxCtx77da62_ApproveTxCtx77da62_QRegisterMetaType();
int ApproveTxCtx77da62_ApproveTxCtx77da62_QRegisterMetaType2(char* typeName);
int ApproveTxCtx77da62_ApproveTxCtx77da62_QmlRegisterType();
int ApproveTxCtx77da62_ApproveTxCtx77da62_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* ApproveTxCtx77da62___dynamicPropertyNames_atList(void* ptr, int i);
void ApproveTxCtx77da62___dynamicPropertyNames_setList(void* ptr, void* i);
void* ApproveTxCtx77da62___dynamicPropertyNames_newList(void* ptr);
void* ApproveTxCtx77da62___findChildren_atList2(void* ptr, int i);
void ApproveTxCtx77da62___findChildren_setList2(void* ptr, void* i);
void* ApproveTxCtx77da62___findChildren_newList2(void* ptr);
void* ApproveTxCtx77da62___findChildren_atList3(void* ptr, int i);
void ApproveTxCtx77da62___findChildren_setList3(void* ptr, void* i);
void* ApproveTxCtx77da62___findChildren_newList3(void* ptr);
void* ApproveTxCtx77da62___findChildren_atList(void* ptr, int i);
void ApproveTxCtx77da62___findChildren_setList(void* ptr, void* i);
void* ApproveTxCtx77da62___findChildren_newList(void* ptr);
void* ApproveTxCtx77da62___children_atList(void* ptr, int i);
void ApproveTxCtx77da62___children_setList(void* ptr, void* i);
void* ApproveTxCtx77da62___children_newList(void* ptr);
void* ApproveTxCtx77da62_NewApproveTxCtx(void* parent);
void ApproveTxCtx77da62_DestroyApproveTxCtx(void* ptr);
void ApproveTxCtx77da62_DestroyApproveTxCtxDefault(void* ptr);
char ApproveTxCtx77da62_EventDefault(void* ptr, void* e);
char ApproveTxCtx77da62_EventFilterDefault(void* ptr, void* watched, void* event);
void ApproveTxCtx77da62_ChildEventDefault(void* ptr, void* event);
void ApproveTxCtx77da62_ConnectNotifyDefault(void* ptr, void* sign);
void ApproveTxCtx77da62_CustomEventDefault(void* ptr, void* event);
void ApproveTxCtx77da62_DeleteLaterDefault(void* ptr);
void ApproveTxCtx77da62_DisconnectNotifyDefault(void* ptr, void* sign);
void ApproveTxCtx77da62_TimerEventDefault(void* ptr, void* event);
;
void CustomListModel77da62_ConnectClear(void* ptr);
void CustomListModel77da62_DisconnectClear(void* ptr);
void CustomListModel77da62_Clear(void* ptr);
void CustomListModel77da62_ConnectAdd(void* ptr);
void CustomListModel77da62_DisconnectAdd(void* ptr);
void CustomListModel77da62_Add(void* ptr, uintptr_t account);
void CustomListModel77da62_CallbackFromQml(void* ptr);
struct Moc_PackedString CustomListModel77da62_UpdateRequired(void* ptr);
struct Moc_PackedString CustomListModel77da62_UpdateRequiredDefault(void* ptr);
void CustomListModel77da62_SetUpdateRequired(void* ptr, struct Moc_PackedString updateRequired);
void CustomListModel77da62_SetUpdateRequiredDefault(void* ptr, struct Moc_PackedString updateRequired);
void CustomListModel77da62_ConnectUpdateRequiredChanged(void* ptr);
void CustomListModel77da62_DisconnectUpdateRequiredChanged(void* ptr);
void CustomListModel77da62_UpdateRequiredChanged(void* ptr, struct Moc_PackedString updateRequired);
int CustomListModel77da62_CustomListModel77da62_QRegisterMetaType();
int CustomListModel77da62_CustomListModel77da62_QRegisterMetaType2(char* typeName);
int CustomListModel77da62_CustomListModel77da62_QmlRegisterType();
int CustomListModel77da62_CustomListModel77da62_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int CustomListModel77da62_____setItemData_roles_keyList_atList(void* ptr, int i);
void CustomListModel77da62_____setItemData_roles_keyList_setList(void* ptr, int i);
void* CustomListModel77da62_____setItemData_roles_keyList_newList(void* ptr);
int CustomListModel77da62_____roleNames_keyList_atList(void* ptr, int i);
void CustomListModel77da62_____roleNames_keyList_setList(void* ptr, int i);
void* CustomListModel77da62_____roleNames_keyList_newList(void* ptr);
int CustomListModel77da62_____itemData_keyList_atList(void* ptr, int i);
void CustomListModel77da62_____itemData_keyList_setList(void* ptr, int i);
void* CustomListModel77da62_____itemData_keyList_newList(void* ptr);
void* CustomListModel77da62___setItemData_roles_atList(void* ptr, int v, int i);
void CustomListModel77da62___setItemData_roles_setList(void* ptr, int key, void* i);
void* CustomListModel77da62___setItemData_roles_newList(void* ptr);
struct Moc_PackedList CustomListModel77da62___setItemData_roles_keyList(void* ptr);
void* CustomListModel77da62___changePersistentIndexList_from_atList(void* ptr, int i);
void CustomListModel77da62___changePersistentIndexList_from_setList(void* ptr, void* i);
void* CustomListModel77da62___changePersistentIndexList_from_newList(void* ptr);
void* CustomListModel77da62___changePersistentIndexList_to_atList(void* ptr, int i);
void CustomListModel77da62___changePersistentIndexList_to_setList(void* ptr, void* i);
void* CustomListModel77da62___changePersistentIndexList_to_newList(void* ptr);
int CustomListModel77da62___dataChanged_roles_atList(void* ptr, int i);
void CustomListModel77da62___dataChanged_roles_setList(void* ptr, int i);
void* CustomListModel77da62___dataChanged_roles_newList(void* ptr);
void* CustomListModel77da62___layoutAboutToBeChanged_parents_atList(void* ptr, int i);
void CustomListModel77da62___layoutAboutToBeChanged_parents_setList(void* ptr, void* i);
void* CustomListModel77da62___layoutAboutToBeChanged_parents_newList(void* ptr);
void* CustomListModel77da62___layoutChanged_parents_atList(void* ptr, int i);
void CustomListModel77da62___layoutChanged_parents_setList(void* ptr, void* i);
void* CustomListModel77da62___layoutChanged_parents_newList(void* ptr);
void* CustomListModel77da62___roleNames_atList(void* ptr, int v, int i);
void CustomListModel77da62___roleNames_setList(void* ptr, int key, void* i);
void* CustomListModel77da62___roleNames_newList(void* ptr);
struct Moc_PackedList CustomListModel77da62___roleNames_keyList(void* ptr);
void* CustomListModel77da62___itemData_atList(void* ptr, int v, int i);
void CustomListModel77da62___itemData_setList(void* ptr, int key, void* i);
void* CustomListModel77da62___itemData_newList(void* ptr);
struct Moc_PackedList CustomListModel77da62___itemData_keyList(void* ptr);
void* CustomListModel77da62___mimeData_indexes_atList(void* ptr, int i);
void CustomListModel77da62___mimeData_indexes_setList(void* ptr, void* i);
void* CustomListModel77da62___mimeData_indexes_newList(void* ptr);
void* CustomListModel77da62___match_atList(void* ptr, int i);
void CustomListModel77da62___match_setList(void* ptr, void* i);
void* CustomListModel77da62___match_newList(void* ptr);
void* CustomListModel77da62___persistentIndexList_atList(void* ptr, int i);
void CustomListModel77da62___persistentIndexList_setList(void* ptr, void* i);
void* CustomListModel77da62___persistentIndexList_newList(void* ptr);
int CustomListModel77da62_____doSetRoleNames_roleNames_keyList_atList(void* ptr, int i);
void CustomListModel77da62_____doSetRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* CustomListModel77da62_____doSetRoleNames_roleNames_keyList_newList(void* ptr);
int CustomListModel77da62_____setRoleNames_roleNames_keyList_atList(void* ptr, int i);
void CustomListModel77da62_____setRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* CustomListModel77da62_____setRoleNames_roleNames_keyList_newList(void* ptr);
void* CustomListModel77da62___dynamicPropertyNames_atList(void* ptr, int i);
void CustomListModel77da62___dynamicPropertyNames_setList(void* ptr, void* i);
void* CustomListModel77da62___dynamicPropertyNames_newList(void* ptr);
void* CustomListModel77da62___findChildren_atList2(void* ptr, int i);
void CustomListModel77da62___findChildren_setList2(void* ptr, void* i);
void* CustomListModel77da62___findChildren_newList2(void* ptr);
void* CustomListModel77da62___findChildren_atList3(void* ptr, int i);
void CustomListModel77da62___findChildren_setList3(void* ptr, void* i);
void* CustomListModel77da62___findChildren_newList3(void* ptr);
void* CustomListModel77da62___findChildren_atList(void* ptr, int i);
void CustomListModel77da62___findChildren_setList(void* ptr, void* i);
void* CustomListModel77da62___findChildren_newList(void* ptr);
void* CustomListModel77da62___children_atList(void* ptr, int i);
void CustomListModel77da62___children_setList(void* ptr, void* i);
void* CustomListModel77da62___children_newList(void* ptr);
void* CustomListModel77da62_NewCustomListModel(void* parent);
void CustomListModel77da62_DestroyCustomListModel(void* ptr);
void CustomListModel77da62_DestroyCustomListModelDefault(void* ptr);
char CustomListModel77da62_DropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
void* CustomListModel77da62_IndexDefault(void* ptr, int row, int column, void* parent);
void* CustomListModel77da62_SiblingDefault(void* ptr, int row, int column, void* idx);
long long CustomListModel77da62_FlagsDefault(void* ptr, void* index);
;
char CustomListModel77da62_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char CustomListModel77da62_InsertRowsDefault(void* ptr, int row, int count, void* parent);
char CustomListModel77da62_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char CustomListModel77da62_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
char CustomListModel77da62_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char CustomListModel77da62_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
char CustomListModel77da62_SetDataDefault(void* ptr, void* index, void* value, int role);
char CustomListModel77da62_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
char CustomListModel77da62_SetItemDataDefault(void* ptr, void* index, void* roles);
char CustomListModel77da62_SubmitDefault(void* ptr);
void CustomListModel77da62_FetchMoreDefault(void* ptr, void* parent);
void CustomListModel77da62_ResetInternalDataDefault(void* ptr);
void CustomListModel77da62_RevertDefault(void* ptr);
void CustomListModel77da62_SortDefault(void* ptr, int column, long long order);
struct Moc_PackedList CustomListModel77da62_RoleNamesDefault(void* ptr);
struct Moc_PackedList CustomListModel77da62_ItemDataDefault(void* ptr, void* index);
void* CustomListModel77da62_MimeDataDefault(void* ptr, void* indexes);
void* CustomListModel77da62_BuddyDefault(void* ptr, void* index);
void* CustomListModel77da62_ParentDefault(void* ptr, void* index);
struct Moc_PackedList CustomListModel77da62_MatchDefault(void* ptr, void* start, int role, void* value, int hits, long long flags);
void* CustomListModel77da62_SpanDefault(void* ptr, void* index);
struct Moc_PackedString CustomListModel77da62_MimeTypesDefault(void* ptr);
void* CustomListModel77da62_DataDefault(void* ptr, void* index, int role);
void* CustomListModel77da62_HeaderDataDefault(void* ptr, int section, long long orientation, int role);
long long CustomListModel77da62_SupportedDragActionsDefault(void* ptr);
long long CustomListModel77da62_SupportedDropActionsDefault(void* ptr);
char CustomListModel77da62_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char CustomListModel77da62_CanFetchMoreDefault(void* ptr, void* parent);
char CustomListModel77da62_HasChildrenDefault(void* ptr, void* parent);
int CustomListModel77da62_ColumnCountDefault(void* ptr, void* parent);
int CustomListModel77da62_RowCountDefault(void* ptr, void* parent);
char CustomListModel77da62_EventDefault(void* ptr, void* e);
char CustomListModel77da62_EventFilterDefault(void* ptr, void* watched, void* event);
void CustomListModel77da62_ChildEventDefault(void* ptr, void* event);
void CustomListModel77da62_ConnectNotifyDefault(void* ptr, void* sign);
void CustomListModel77da62_CustomEventDefault(void* ptr, void* event);
void CustomListModel77da62_DeleteLaterDefault(void* ptr);
void CustomListModel77da62_DisconnectNotifyDefault(void* ptr, void* sign);
void CustomListModel77da62_TimerEventDefault(void* ptr, void* event);
void LoginCtx77da62_ConnectClicked(void* ptr);
void LoginCtx77da62_DisconnectClicked(void* ptr);
void LoginCtx77da62_Clicked(void* ptr);
void LoginCtx77da62_ConnectEdited(void* ptr);
void LoginCtx77da62_DisconnectEdited(void* ptr);
void LoginCtx77da62_Edited(void* ptr, struct Moc_PackedString b);
struct Moc_PackedString LoginCtx77da62_Remote(void* ptr);
struct Moc_PackedString LoginCtx77da62_RemoteDefault(void* ptr);
void LoginCtx77da62_SetRemote(void* ptr, struct Moc_PackedString remote);
void LoginCtx77da62_SetRemoteDefault(void* ptr, struct Moc_PackedString remote);
void LoginCtx77da62_ConnectRemoteChanged(void* ptr);
void LoginCtx77da62_DisconnectRemoteChanged(void* ptr);
void LoginCtx77da62_RemoteChanged(void* ptr, struct Moc_PackedString remote);
struct Moc_PackedString LoginCtx77da62_Transport(void* ptr);
struct Moc_PackedString LoginCtx77da62_TransportDefault(void* ptr);
void LoginCtx77da62_SetTransport(void* ptr, struct Moc_PackedString transport);
void LoginCtx77da62_SetTransportDefault(void* ptr, struct Moc_PackedString transport);
void LoginCtx77da62_ConnectTransportChanged(void* ptr);
void LoginCtx77da62_DisconnectTransportChanged(void* ptr);
void LoginCtx77da62_TransportChanged(void* ptr, struct Moc_PackedString transport);
struct Moc_PackedString LoginCtx77da62_Endpoint(void* ptr);
struct Moc_PackedString LoginCtx77da62_EndpointDefault(void* ptr);
void LoginCtx77da62_SetEndpoint(void* ptr, struct Moc_PackedString endpoint);
void LoginCtx77da62_SetEndpointDefault(void* ptr, struct Moc_PackedString endpoint);
void LoginCtx77da62_ConnectEndpointChanged(void* ptr);
void LoginCtx77da62_DisconnectEndpointChanged(void* ptr);
void LoginCtx77da62_EndpointChanged(void* ptr, struct Moc_PackedString endpoint);
struct Moc_PackedString LoginCtx77da62_Gopath(void* ptr);
struct Moc_PackedString LoginCtx77da62_GopathDefault(void* ptr);
void LoginCtx77da62_SetGopath(void* ptr, struct Moc_PackedString gopath);
void LoginCtx77da62_SetGopathDefault(void* ptr, struct Moc_PackedString gopath);
void LoginCtx77da62_ConnectGopathChanged(void* ptr);
void LoginCtx77da62_DisconnectGopathChanged(void* ptr);
void LoginCtx77da62_GopathChanged(void* ptr, struct Moc_PackedString gopath);
struct Moc_PackedString LoginCtx77da62_BinaryHash(void* ptr);
struct Moc_PackedString LoginCtx77da62_BinaryHashDefault(void* ptr);
void LoginCtx77da62_SetBinaryHash(void* ptr, struct Moc_PackedString binaryHash);
void LoginCtx77da62_SetBinaryHashDefault(void* ptr, struct Moc_PackedString binaryHash);
void LoginCtx77da62_ConnectBinaryHashChanged(void* ptr);
void LoginCtx77da62_DisconnectBinaryHashChanged(void* ptr);
void LoginCtx77da62_BinaryHashChanged(void* ptr, struct Moc_PackedString binaryHash);
char LoginCtx77da62_IsValid(void* ptr);
char LoginCtx77da62_IsValidDefault(void* ptr);
void LoginCtx77da62_SetIsValid(void* ptr, char isValid);
void LoginCtx77da62_SetIsValidDefault(void* ptr, char isValid);
void LoginCtx77da62_ConnectIsValidChanged(void* ptr);
void LoginCtx77da62_DisconnectIsValidChanged(void* ptr);
void LoginCtx77da62_IsValidChanged(void* ptr, char isValid);
int LoginCtx77da62_LoginCtx77da62_QRegisterMetaType();
int LoginCtx77da62_LoginCtx77da62_QRegisterMetaType2(char* typeName);
int LoginCtx77da62_LoginCtx77da62_QmlRegisterType();
int LoginCtx77da62_LoginCtx77da62_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* LoginCtx77da62___dynamicPropertyNames_atList(void* ptr, int i);
void LoginCtx77da62___dynamicPropertyNames_setList(void* ptr, void* i);
void* LoginCtx77da62___dynamicPropertyNames_newList(void* ptr);
void* LoginCtx77da62___findChildren_atList2(void* ptr, int i);
void LoginCtx77da62___findChildren_setList2(void* ptr, void* i);
void* LoginCtx77da62___findChildren_newList2(void* ptr);
void* LoginCtx77da62___findChildren_atList3(void* ptr, int i);
void LoginCtx77da62___findChildren_setList3(void* ptr, void* i);
void* LoginCtx77da62___findChildren_newList3(void* ptr);
void* LoginCtx77da62___findChildren_atList(void* ptr, int i);
void LoginCtx77da62___findChildren_setList(void* ptr, void* i);
void* LoginCtx77da62___findChildren_newList(void* ptr);
void* LoginCtx77da62___children_atList(void* ptr, int i);
void LoginCtx77da62___children_setList(void* ptr, void* i);
void* LoginCtx77da62___children_newList(void* ptr);
void* LoginCtx77da62_NewLoginCtx(void* parent);
void LoginCtx77da62_DestroyLoginCtx(void* ptr);
void LoginCtx77da62_DestroyLoginCtxDefault(void* ptr);
char LoginCtx77da62_EventDefault(void* ptr, void* e);
char LoginCtx77da62_EventFilterDefault(void* ptr, void* watched, void* event);
void LoginCtx77da62_ChildEventDefault(void* ptr, void* event);
void LoginCtx77da62_ConnectNotifyDefault(void* ptr, void* sign);
void LoginCtx77da62_CustomEventDefault(void* ptr, void* event);
void LoginCtx77da62_DeleteLaterDefault(void* ptr);
void LoginCtx77da62_DisconnectNotifyDefault(void* ptr, void* sign);
void LoginCtx77da62_TimerEventDefault(void* ptr, void* event);
;
void TxListAccountsModel77da62_ConnectAdd(void* ptr);
void TxListAccountsModel77da62_DisconnectAdd(void* ptr);
void TxListAccountsModel77da62_Add(void* ptr, struct Moc_PackedString tx);
int TxListAccountsModel77da62_TxListAccountsModel77da62_QRegisterMetaType();
int TxListAccountsModel77da62_TxListAccountsModel77da62_QRegisterMetaType2(char* typeName);
int TxListAccountsModel77da62_TxListAccountsModel77da62_QmlRegisterType();
int TxListAccountsModel77da62_TxListAccountsModel77da62_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int TxListAccountsModel77da62_____setItemData_roles_keyList_atList(void* ptr, int i);
void TxListAccountsModel77da62_____setItemData_roles_keyList_setList(void* ptr, int i);
void* TxListAccountsModel77da62_____setItemData_roles_keyList_newList(void* ptr);
int TxListAccountsModel77da62_____roleNames_keyList_atList(void* ptr, int i);
void TxListAccountsModel77da62_____roleNames_keyList_setList(void* ptr, int i);
void* TxListAccountsModel77da62_____roleNames_keyList_newList(void* ptr);
int TxListAccountsModel77da62_____itemData_keyList_atList(void* ptr, int i);
void TxListAccountsModel77da62_____itemData_keyList_setList(void* ptr, int i);
void* TxListAccountsModel77da62_____itemData_keyList_newList(void* ptr);
void* TxListAccountsModel77da62___setItemData_roles_atList(void* ptr, int v, int i);
void TxListAccountsModel77da62___setItemData_roles_setList(void* ptr, int key, void* i);
void* TxListAccountsModel77da62___setItemData_roles_newList(void* ptr);
struct Moc_PackedList TxListAccountsModel77da62___setItemData_roles_keyList(void* ptr);
void* TxListAccountsModel77da62___changePersistentIndexList_from_atList(void* ptr, int i);
void TxListAccountsModel77da62___changePersistentIndexList_from_setList(void* ptr, void* i);
void* TxListAccountsModel77da62___changePersistentIndexList_from_newList(void* ptr);
void* TxListAccountsModel77da62___changePersistentIndexList_to_atList(void* ptr, int i);
void TxListAccountsModel77da62___changePersistentIndexList_to_setList(void* ptr, void* i);
void* TxListAccountsModel77da62___changePersistentIndexList_to_newList(void* ptr);
int TxListAccountsModel77da62___dataChanged_roles_atList(void* ptr, int i);
void TxListAccountsModel77da62___dataChanged_roles_setList(void* ptr, int i);
void* TxListAccountsModel77da62___dataChanged_roles_newList(void* ptr);
void* TxListAccountsModel77da62___layoutAboutToBeChanged_parents_atList(void* ptr, int i);
void TxListAccountsModel77da62___layoutAboutToBeChanged_parents_setList(void* ptr, void* i);
void* TxListAccountsModel77da62___layoutAboutToBeChanged_parents_newList(void* ptr);
void* TxListAccountsModel77da62___layoutChanged_parents_atList(void* ptr, int i);
void TxListAccountsModel77da62___layoutChanged_parents_setList(void* ptr, void* i);
void* TxListAccountsModel77da62___layoutChanged_parents_newList(void* ptr);
void* TxListAccountsModel77da62___roleNames_atList(void* ptr, int v, int i);
void TxListAccountsModel77da62___roleNames_setList(void* ptr, int key, void* i);
void* TxListAccountsModel77da62___roleNames_newList(void* ptr);
struct Moc_PackedList TxListAccountsModel77da62___roleNames_keyList(void* ptr);
void* TxListAccountsModel77da62___itemData_atList(void* ptr, int v, int i);
void TxListAccountsModel77da62___itemData_setList(void* ptr, int key, void* i);
void* TxListAccountsModel77da62___itemData_newList(void* ptr);
struct Moc_PackedList TxListAccountsModel77da62___itemData_keyList(void* ptr);
void* TxListAccountsModel77da62___mimeData_indexes_atList(void* ptr, int i);
void TxListAccountsModel77da62___mimeData_indexes_setList(void* ptr, void* i);
void* TxListAccountsModel77da62___mimeData_indexes_newList(void* ptr);
void* TxListAccountsModel77da62___match_atList(void* ptr, int i);
void TxListAccountsModel77da62___match_setList(void* ptr, void* i);
void* TxListAccountsModel77da62___match_newList(void* ptr);
void* TxListAccountsModel77da62___persistentIndexList_atList(void* ptr, int i);
void TxListAccountsModel77da62___persistentIndexList_setList(void* ptr, void* i);
void* TxListAccountsModel77da62___persistentIndexList_newList(void* ptr);
int TxListAccountsModel77da62_____doSetRoleNames_roleNames_keyList_atList(void* ptr, int i);
void TxListAccountsModel77da62_____doSetRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* TxListAccountsModel77da62_____doSetRoleNames_roleNames_keyList_newList(void* ptr);
int TxListAccountsModel77da62_____setRoleNames_roleNames_keyList_atList(void* ptr, int i);
void TxListAccountsModel77da62_____setRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* TxListAccountsModel77da62_____setRoleNames_roleNames_keyList_newList(void* ptr);
void* TxListAccountsModel77da62___dynamicPropertyNames_atList(void* ptr, int i);
void TxListAccountsModel77da62___dynamicPropertyNames_setList(void* ptr, void* i);
void* TxListAccountsModel77da62___dynamicPropertyNames_newList(void* ptr);
void* TxListAccountsModel77da62___findChildren_atList2(void* ptr, int i);
void TxListAccountsModel77da62___findChildren_setList2(void* ptr, void* i);
void* TxListAccountsModel77da62___findChildren_newList2(void* ptr);
void* TxListAccountsModel77da62___findChildren_atList3(void* ptr, int i);
void TxListAccountsModel77da62___findChildren_setList3(void* ptr, void* i);
void* TxListAccountsModel77da62___findChildren_newList3(void* ptr);
void* TxListAccountsModel77da62___findChildren_atList(void* ptr, int i);
void TxListAccountsModel77da62___findChildren_setList(void* ptr, void* i);
void* TxListAccountsModel77da62___findChildren_newList(void* ptr);
void* TxListAccountsModel77da62___children_atList(void* ptr, int i);
void TxListAccountsModel77da62___children_setList(void* ptr, void* i);
void* TxListAccountsModel77da62___children_newList(void* ptr);
void* TxListAccountsModel77da62_NewTxListAccountsModel(void* parent);
void TxListAccountsModel77da62_DestroyTxListAccountsModel(void* ptr);
void TxListAccountsModel77da62_DestroyTxListAccountsModelDefault(void* ptr);
char TxListAccountsModel77da62_DropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
void* TxListAccountsModel77da62_IndexDefault(void* ptr, int row, int column, void* parent);
void* TxListAccountsModel77da62_SiblingDefault(void* ptr, int row, int column, void* idx);
long long TxListAccountsModel77da62_FlagsDefault(void* ptr, void* index);
;
char TxListAccountsModel77da62_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char TxListAccountsModel77da62_InsertRowsDefault(void* ptr, int row, int count, void* parent);
char TxListAccountsModel77da62_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char TxListAccountsModel77da62_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
char TxListAccountsModel77da62_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char TxListAccountsModel77da62_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
char TxListAccountsModel77da62_SetDataDefault(void* ptr, void* index, void* value, int role);
char TxListAccountsModel77da62_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
char TxListAccountsModel77da62_SetItemDataDefault(void* ptr, void* index, void* roles);
char TxListAccountsModel77da62_SubmitDefault(void* ptr);
void TxListAccountsModel77da62_FetchMoreDefault(void* ptr, void* parent);
void TxListAccountsModel77da62_ResetInternalDataDefault(void* ptr);
void TxListAccountsModel77da62_RevertDefault(void* ptr);
void TxListAccountsModel77da62_SortDefault(void* ptr, int column, long long order);
struct Moc_PackedList TxListAccountsModel77da62_RoleNamesDefault(void* ptr);
struct Moc_PackedList TxListAccountsModel77da62_ItemDataDefault(void* ptr, void* index);
void* TxListAccountsModel77da62_MimeDataDefault(void* ptr, void* indexes);
void* TxListAccountsModel77da62_BuddyDefault(void* ptr, void* index);
void* TxListAccountsModel77da62_ParentDefault(void* ptr, void* index);
struct Moc_PackedList TxListAccountsModel77da62_MatchDefault(void* ptr, void* start, int role, void* value, int hits, long long flags);
void* TxListAccountsModel77da62_SpanDefault(void* ptr, void* index);
struct Moc_PackedString TxListAccountsModel77da62_MimeTypesDefault(void* ptr);
void* TxListAccountsModel77da62_DataDefault(void* ptr, void* index, int role);
void* TxListAccountsModel77da62_HeaderDataDefault(void* ptr, int section, long long orientation, int role);
long long TxListAccountsModel77da62_SupportedDragActionsDefault(void* ptr);
long long TxListAccountsModel77da62_SupportedDropActionsDefault(void* ptr);
char TxListAccountsModel77da62_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char TxListAccountsModel77da62_CanFetchMoreDefault(void* ptr, void* parent);
char TxListAccountsModel77da62_HasChildrenDefault(void* ptr, void* parent);
int TxListAccountsModel77da62_ColumnCountDefault(void* ptr, void* parent);
int TxListAccountsModel77da62_RowCountDefault(void* ptr, void* parent);
char TxListAccountsModel77da62_EventDefault(void* ptr, void* e);
char TxListAccountsModel77da62_EventFilterDefault(void* ptr, void* watched, void* event);
void TxListAccountsModel77da62_ChildEventDefault(void* ptr, void* event);
void TxListAccountsModel77da62_ConnectNotifyDefault(void* ptr, void* sign);
void TxListAccountsModel77da62_CustomEventDefault(void* ptr, void* event);
void TxListAccountsModel77da62_DeleteLaterDefault(void* ptr);
void TxListAccountsModel77da62_DisconnectNotifyDefault(void* ptr, void* sign);
void TxListAccountsModel77da62_TimerEventDefault(void* ptr, void* event);
void TxListModel77da62_ConnectClear(void* ptr);
void TxListModel77da62_DisconnectClear(void* ptr);
void TxListModel77da62_Clear(void* ptr);
void TxListModel77da62_ConnectAdd(void* ptr);
void TxListModel77da62_DisconnectAdd(void* ptr);
void TxListModel77da62_Add(void* ptr, uintptr_t tx);
void TxListModel77da62_ConnectRemove(void* ptr);
void TxListModel77da62_DisconnectRemove(void* ptr);
void TxListModel77da62_Remove(void* ptr, int i);
char TxListModel77da62_IsEmpty(void* ptr);
char TxListModel77da62_IsEmptyDefault(void* ptr);
void TxListModel77da62_SetIsEmpty(void* ptr, char isEmpty);
void TxListModel77da62_SetIsEmptyDefault(void* ptr, char isEmpty);
void TxListModel77da62_ConnectIsEmptyChanged(void* ptr);
void TxListModel77da62_DisconnectIsEmptyChanged(void* ptr);
void TxListModel77da62_IsEmptyChanged(void* ptr, char isEmpty);
int TxListModel77da62_TxListModel77da62_QRegisterMetaType();
int TxListModel77da62_TxListModel77da62_QRegisterMetaType2(char* typeName);
int TxListModel77da62_TxListModel77da62_QmlRegisterType();
int TxListModel77da62_TxListModel77da62_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int TxListModel77da62_____setItemData_roles_keyList_atList(void* ptr, int i);
void TxListModel77da62_____setItemData_roles_keyList_setList(void* ptr, int i);
void* TxListModel77da62_____setItemData_roles_keyList_newList(void* ptr);
int TxListModel77da62_____roleNames_keyList_atList(void* ptr, int i);
void TxListModel77da62_____roleNames_keyList_setList(void* ptr, int i);
void* TxListModel77da62_____roleNames_keyList_newList(void* ptr);
int TxListModel77da62_____itemData_keyList_atList(void* ptr, int i);
void TxListModel77da62_____itemData_keyList_setList(void* ptr, int i);
void* TxListModel77da62_____itemData_keyList_newList(void* ptr);
void* TxListModel77da62___setItemData_roles_atList(void* ptr, int v, int i);
void TxListModel77da62___setItemData_roles_setList(void* ptr, int key, void* i);
void* TxListModel77da62___setItemData_roles_newList(void* ptr);
struct Moc_PackedList TxListModel77da62___setItemData_roles_keyList(void* ptr);
void* TxListModel77da62___changePersistentIndexList_from_atList(void* ptr, int i);
void TxListModel77da62___changePersistentIndexList_from_setList(void* ptr, void* i);
void* TxListModel77da62___changePersistentIndexList_from_newList(void* ptr);
void* TxListModel77da62___changePersistentIndexList_to_atList(void* ptr, int i);
void TxListModel77da62___changePersistentIndexList_to_setList(void* ptr, void* i);
void* TxListModel77da62___changePersistentIndexList_to_newList(void* ptr);
int TxListModel77da62___dataChanged_roles_atList(void* ptr, int i);
void TxListModel77da62___dataChanged_roles_setList(void* ptr, int i);
void* TxListModel77da62___dataChanged_roles_newList(void* ptr);
void* TxListModel77da62___layoutAboutToBeChanged_parents_atList(void* ptr, int i);
void TxListModel77da62___layoutAboutToBeChanged_parents_setList(void* ptr, void* i);
void* TxListModel77da62___layoutAboutToBeChanged_parents_newList(void* ptr);
void* TxListModel77da62___layoutChanged_parents_atList(void* ptr, int i);
void TxListModel77da62___layoutChanged_parents_setList(void* ptr, void* i);
void* TxListModel77da62___layoutChanged_parents_newList(void* ptr);
void* TxListModel77da62___roleNames_atList(void* ptr, int v, int i);
void TxListModel77da62___roleNames_setList(void* ptr, int key, void* i);
void* TxListModel77da62___roleNames_newList(void* ptr);
struct Moc_PackedList TxListModel77da62___roleNames_keyList(void* ptr);
void* TxListModel77da62___itemData_atList(void* ptr, int v, int i);
void TxListModel77da62___itemData_setList(void* ptr, int key, void* i);
void* TxListModel77da62___itemData_newList(void* ptr);
struct Moc_PackedList TxListModel77da62___itemData_keyList(void* ptr);
void* TxListModel77da62___mimeData_indexes_atList(void* ptr, int i);
void TxListModel77da62___mimeData_indexes_setList(void* ptr, void* i);
void* TxListModel77da62___mimeData_indexes_newList(void* ptr);
void* TxListModel77da62___match_atList(void* ptr, int i);
void TxListModel77da62___match_setList(void* ptr, void* i);
void* TxListModel77da62___match_newList(void* ptr);
void* TxListModel77da62___persistentIndexList_atList(void* ptr, int i);
void TxListModel77da62___persistentIndexList_setList(void* ptr, void* i);
void* TxListModel77da62___persistentIndexList_newList(void* ptr);
int TxListModel77da62_____doSetRoleNames_roleNames_keyList_atList(void* ptr, int i);
void TxListModel77da62_____doSetRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* TxListModel77da62_____doSetRoleNames_roleNames_keyList_newList(void* ptr);
int TxListModel77da62_____setRoleNames_roleNames_keyList_atList(void* ptr, int i);
void TxListModel77da62_____setRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* TxListModel77da62_____setRoleNames_roleNames_keyList_newList(void* ptr);
void* TxListModel77da62___dynamicPropertyNames_atList(void* ptr, int i);
void TxListModel77da62___dynamicPropertyNames_setList(void* ptr, void* i);
void* TxListModel77da62___dynamicPropertyNames_newList(void* ptr);
void* TxListModel77da62___findChildren_atList2(void* ptr, int i);
void TxListModel77da62___findChildren_setList2(void* ptr, void* i);
void* TxListModel77da62___findChildren_newList2(void* ptr);
void* TxListModel77da62___findChildren_atList3(void* ptr, int i);
void TxListModel77da62___findChildren_setList3(void* ptr, void* i);
void* TxListModel77da62___findChildren_newList3(void* ptr);
void* TxListModel77da62___findChildren_atList(void* ptr, int i);
void TxListModel77da62___findChildren_setList(void* ptr, void* i);
void* TxListModel77da62___findChildren_newList(void* ptr);
void* TxListModel77da62___children_atList(void* ptr, int i);
void TxListModel77da62___children_setList(void* ptr, void* i);
void* TxListModel77da62___children_newList(void* ptr);
void* TxListModel77da62_NewTxListModel(void* parent);
void TxListModel77da62_DestroyTxListModel(void* ptr);
void TxListModel77da62_DestroyTxListModelDefault(void* ptr);
char TxListModel77da62_DropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
void* TxListModel77da62_IndexDefault(void* ptr, int row, int column, void* parent);
void* TxListModel77da62_SiblingDefault(void* ptr, int row, int column, void* idx);
long long TxListModel77da62_FlagsDefault(void* ptr, void* index);
;
char TxListModel77da62_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char TxListModel77da62_InsertRowsDefault(void* ptr, int row, int count, void* parent);
char TxListModel77da62_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char TxListModel77da62_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
char TxListModel77da62_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char TxListModel77da62_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
char TxListModel77da62_SetDataDefault(void* ptr, void* index, void* value, int role);
char TxListModel77da62_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
char TxListModel77da62_SetItemDataDefault(void* ptr, void* index, void* roles);
char TxListModel77da62_SubmitDefault(void* ptr);
void TxListModel77da62_FetchMoreDefault(void* ptr, void* parent);
void TxListModel77da62_ResetInternalDataDefault(void* ptr);
void TxListModel77da62_RevertDefault(void* ptr);
void TxListModel77da62_SortDefault(void* ptr, int column, long long order);
struct Moc_PackedList TxListModel77da62_RoleNamesDefault(void* ptr);
struct Moc_PackedList TxListModel77da62_ItemDataDefault(void* ptr, void* index);
void* TxListModel77da62_MimeDataDefault(void* ptr, void* indexes);
void* TxListModel77da62_BuddyDefault(void* ptr, void* index);
void* TxListModel77da62_ParentDefault(void* ptr, void* index);
struct Moc_PackedList TxListModel77da62_MatchDefault(void* ptr, void* start, int role, void* value, int hits, long long flags);
void* TxListModel77da62_SpanDefault(void* ptr, void* index);
struct Moc_PackedString TxListModel77da62_MimeTypesDefault(void* ptr);
void* TxListModel77da62_DataDefault(void* ptr, void* index, int role);
void* TxListModel77da62_HeaderDataDefault(void* ptr, int section, long long orientation, int role);
long long TxListModel77da62_SupportedDragActionsDefault(void* ptr);
long long TxListModel77da62_SupportedDropActionsDefault(void* ptr);
char TxListModel77da62_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char TxListModel77da62_CanFetchMoreDefault(void* ptr, void* parent);
char TxListModel77da62_HasChildrenDefault(void* ptr, void* parent);
int TxListModel77da62_ColumnCountDefault(void* ptr, void* parent);
int TxListModel77da62_RowCountDefault(void* ptr, void* parent);
char TxListModel77da62_EventDefault(void* ptr, void* e);
char TxListModel77da62_EventFilterDefault(void* ptr, void* watched, void* event);
void TxListModel77da62_ChildEventDefault(void* ptr, void* event);
void TxListModel77da62_ConnectNotifyDefault(void* ptr, void* sign);
void TxListModel77da62_CustomEventDefault(void* ptr, void* event);
void TxListModel77da62_DeleteLaterDefault(void* ptr);
void TxListModel77da62_DisconnectNotifyDefault(void* ptr, void* sign);
void TxListModel77da62_TimerEventDefault(void* ptr, void* event);
void ApproveNewAccountCtx77da62_ConnectClicked(void* ptr);
void ApproveNewAccountCtx77da62_DisconnectClicked(void* ptr);
void ApproveNewAccountCtx77da62_Clicked(void* ptr, int b);
void ApproveNewAccountCtx77da62_ConnectBack(void* ptr);
void ApproveNewAccountCtx77da62_DisconnectBack(void* ptr);
void ApproveNewAccountCtx77da62_Back(void* ptr);
void ApproveNewAccountCtx77da62_ConnectPasswordEdited(void* ptr);
void ApproveNewAccountCtx77da62_DisconnectPasswordEdited(void* ptr);
void ApproveNewAccountCtx77da62_PasswordEdited(void* ptr, struct Moc_PackedString b);
void ApproveNewAccountCtx77da62_ConnectConfirmPasswordEdited(void* ptr);
void ApproveNewAccountCtx77da62_DisconnectConfirmPasswordEdited(void* ptr);
void ApproveNewAccountCtx77da62_ConfirmPasswordEdited(void* ptr, struct Moc_PackedString b);
struct Moc_PackedString ApproveNewAccountCtx77da62_Remote(void* ptr);
struct Moc_PackedString ApproveNewAccountCtx77da62_RemoteDefault(void* ptr);
void ApproveNewAccountCtx77da62_SetRemote(void* ptr, struct Moc_PackedString remote);
void ApproveNewAccountCtx77da62_SetRemoteDefault(void* ptr, struct Moc_PackedString remote);
void ApproveNewAccountCtx77da62_ConnectRemoteChanged(void* ptr);
void ApproveNewAccountCtx77da62_DisconnectRemoteChanged(void* ptr);
void ApproveNewAccountCtx77da62_RemoteChanged(void* ptr, struct Moc_PackedString remote);
struct Moc_PackedString ApproveNewAccountCtx77da62_Transport(void* ptr);
struct Moc_PackedString ApproveNewAccountCtx77da62_TransportDefault(void* ptr);
void ApproveNewAccountCtx77da62_SetTransport(void* ptr, struct Moc_PackedString transport);
void ApproveNewAccountCtx77da62_SetTransportDefault(void* ptr, struct Moc_PackedString transport);
void ApproveNewAccountCtx77da62_ConnectTransportChanged(void* ptr);
void ApproveNewAccountCtx77da62_DisconnectTransportChanged(void* ptr);
void ApproveNewAccountCtx77da62_TransportChanged(void* ptr, struct Moc_PackedString transport);
struct Moc_PackedString ApproveNewAccountCtx77da62_Endpoint(void* ptr);
struct Moc_PackedString ApproveNewAccountCtx77da62_EndpointDefault(void* ptr);
void ApproveNewAccountCtx77da62_SetEndpoint(void* ptr, struct Moc_PackedString endpoint);
void ApproveNewAccountCtx77da62_SetEndpointDefault(void* ptr, struct Moc_PackedString endpoint);
void ApproveNewAccountCtx77da62_ConnectEndpointChanged(void* ptr);
void ApproveNewAccountCtx77da62_DisconnectEndpointChanged(void* ptr);
void ApproveNewAccountCtx77da62_EndpointChanged(void* ptr, struct Moc_PackedString endpoint);
struct Moc_PackedString ApproveNewAccountCtx77da62_Password(void* ptr);
struct Moc_PackedString ApproveNewAccountCtx77da62_PasswordDefault(void* ptr);
void ApproveNewAccountCtx77da62_SetPassword(void* ptr, struct Moc_PackedString password);
void ApproveNewAccountCtx77da62_SetPasswordDefault(void* ptr, struct Moc_PackedString password);
void ApproveNewAccountCtx77da62_ConnectPasswordChanged(void* ptr);
void ApproveNewAccountCtx77da62_DisconnectPasswordChanged(void* ptr);
void ApproveNewAccountCtx77da62_PasswordChanged(void* ptr, struct Moc_PackedString password);
struct Moc_PackedString ApproveNewAccountCtx77da62_ConfirmPassword(void* ptr);
struct Moc_PackedString ApproveNewAccountCtx77da62_ConfirmPasswordDefault(void* ptr);
void ApproveNewAccountCtx77da62_SetConfirmPassword(void* ptr, struct Moc_PackedString confirmPassword);
void ApproveNewAccountCtx77da62_SetConfirmPasswordDefault(void* ptr, struct Moc_PackedString confirmPassword);
void ApproveNewAccountCtx77da62_ConnectConfirmPasswordChanged(void* ptr);
void ApproveNewAccountCtx77da62_DisconnectConfirmPasswordChanged(void* ptr);
void ApproveNewAccountCtx77da62_ConfirmPasswordChanged(void* ptr, struct Moc_PackedString confirmPassword);
int ApproveNewAccountCtx77da62_ApproveNewAccountCtx77da62_QRegisterMetaType();
int ApproveNewAccountCtx77da62_ApproveNewAccountCtx77da62_QRegisterMetaType2(char* typeName);
int ApproveNewAccountCtx77da62_ApproveNewAccountCtx77da62_QmlRegisterType();
int ApproveNewAccountCtx77da62_ApproveNewAccountCtx77da62_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* ApproveNewAccountCtx77da62___dynamicPropertyNames_atList(void* ptr, int i);
void ApproveNewAccountCtx77da62___dynamicPropertyNames_setList(void* ptr, void* i);
void* ApproveNewAccountCtx77da62___dynamicPropertyNames_newList(void* ptr);
void* ApproveNewAccountCtx77da62___findChildren_atList2(void* ptr, int i);
void ApproveNewAccountCtx77da62___findChildren_setList2(void* ptr, void* i);
void* ApproveNewAccountCtx77da62___findChildren_newList2(void* ptr);
void* ApproveNewAccountCtx77da62___findChildren_atList3(void* ptr, int i);
void ApproveNewAccountCtx77da62___findChildren_setList3(void* ptr, void* i);
void* ApproveNewAccountCtx77da62___findChildren_newList3(void* ptr);
void* ApproveNewAccountCtx77da62___findChildren_atList(void* ptr, int i);
void ApproveNewAccountCtx77da62___findChildren_setList(void* ptr, void* i);
void* ApproveNewAccountCtx77da62___findChildren_newList(void* ptr);
void* ApproveNewAccountCtx77da62___children_atList(void* ptr, int i);
void ApproveNewAccountCtx77da62___children_setList(void* ptr, void* i);
void* ApproveNewAccountCtx77da62___children_newList(void* ptr);
void* ApproveNewAccountCtx77da62_NewApproveNewAccountCtx(void* parent);
void ApproveNewAccountCtx77da62_DestroyApproveNewAccountCtx(void* ptr);
void ApproveNewAccountCtx77da62_DestroyApproveNewAccountCtxDefault(void* ptr);
char ApproveNewAccountCtx77da62_EventDefault(void* ptr, void* e);
char ApproveNewAccountCtx77da62_EventFilterDefault(void* ptr, void* watched, void* event);
void ApproveNewAccountCtx77da62_ChildEventDefault(void* ptr, void* event);
void ApproveNewAccountCtx77da62_ConnectNotifyDefault(void* ptr, void* sign);
void ApproveNewAccountCtx77da62_CustomEventDefault(void* ptr, void* event);
void ApproveNewAccountCtx77da62_DeleteLaterDefault(void* ptr);
void ApproveNewAccountCtx77da62_DisconnectNotifyDefault(void* ptr, void* sign);
void ApproveNewAccountCtx77da62_TimerEventDefault(void* ptr, void* event);
;
void ApproveSignDataCtx77da62_ConnectClicked(void* ptr);
void ApproveSignDataCtx77da62_DisconnectClicked(void* ptr);
void ApproveSignDataCtx77da62_Clicked(void* ptr, int b);
void ApproveSignDataCtx77da62_ConnectOnBack(void* ptr);
void ApproveSignDataCtx77da62_DisconnectOnBack(void* ptr);
void ApproveSignDataCtx77da62_OnBack(void* ptr);
void ApproveSignDataCtx77da62_ConnectOnApprove(void* ptr);
void ApproveSignDataCtx77da62_DisconnectOnApprove(void* ptr);
void ApproveSignDataCtx77da62_OnApprove(void* ptr);
void ApproveSignDataCtx77da62_ConnectOnReject(void* ptr);
void ApproveSignDataCtx77da62_DisconnectOnReject(void* ptr);
void ApproveSignDataCtx77da62_OnReject(void* ptr);
void ApproveSignDataCtx77da62_ConnectEdited(void* ptr);
void ApproveSignDataCtx77da62_DisconnectEdited(void* ptr);
void ApproveSignDataCtx77da62_Edited(void* ptr, struct Moc_PackedString b, struct Moc_PackedString value);
struct Moc_PackedString ApproveSignDataCtx77da62_Remote(void* ptr);
struct Moc_PackedString ApproveSignDataCtx77da62_RemoteDefault(void* ptr);
void ApproveSignDataCtx77da62_SetRemote(void* ptr, struct Moc_PackedString remote);
void ApproveSignDataCtx77da62_SetRemoteDefault(void* ptr, struct Moc_PackedString remote);
void ApproveSignDataCtx77da62_ConnectRemoteChanged(void* ptr);
void ApproveSignDataCtx77da62_DisconnectRemoteChanged(void* ptr);
void ApproveSignDataCtx77da62_RemoteChanged(void* ptr, struct Moc_PackedString remote);
struct Moc_PackedString ApproveSignDataCtx77da62_Transport(void* ptr);
struct Moc_PackedString ApproveSignDataCtx77da62_TransportDefault(void* ptr);
void ApproveSignDataCtx77da62_SetTransport(void* ptr, struct Moc_PackedString transport);
void ApproveSignDataCtx77da62_SetTransportDefault(void* ptr, struct Moc_PackedString transport);
void ApproveSignDataCtx77da62_ConnectTransportChanged(void* ptr);
void ApproveSignDataCtx77da62_DisconnectTransportChanged(void* ptr);
void ApproveSignDataCtx77da62_TransportChanged(void* ptr, struct Moc_PackedString transport);
struct Moc_PackedString ApproveSignDataCtx77da62_Endpoint(void* ptr);
struct Moc_PackedString ApproveSignDataCtx77da62_EndpointDefault(void* ptr);
void ApproveSignDataCtx77da62_SetEndpoint(void* ptr, struct Moc_PackedString endpoint);
void ApproveSignDataCtx77da62_SetEndpointDefault(void* ptr, struct Moc_PackedString endpoint);
void ApproveSignDataCtx77da62_ConnectEndpointChanged(void* ptr);
void ApproveSignDataCtx77da62_DisconnectEndpointChanged(void* ptr);
void ApproveSignDataCtx77da62_EndpointChanged(void* ptr, struct Moc_PackedString endpoint);
struct Moc_PackedString ApproveSignDataCtx77da62_From(void* ptr);
struct Moc_PackedString ApproveSignDataCtx77da62_FromDefault(void* ptr);
void ApproveSignDataCtx77da62_SetFrom(void* ptr, struct Moc_PackedString from);
void ApproveSignDataCtx77da62_SetFromDefault(void* ptr, struct Moc_PackedString from);
void ApproveSignDataCtx77da62_ConnectFromChanged(void* ptr);
void ApproveSignDataCtx77da62_DisconnectFromChanged(void* ptr);
void ApproveSignDataCtx77da62_FromChanged(void* ptr, struct Moc_PackedString from);
struct Moc_PackedString ApproveSignDataCtx77da62_Message(void* ptr);
struct Moc_PackedString ApproveSignDataCtx77da62_MessageDefault(void* ptr);
void ApproveSignDataCtx77da62_SetMessage(void* ptr, struct Moc_PackedString message);
void ApproveSignDataCtx77da62_SetMessageDefault(void* ptr, struct Moc_PackedString message);
void ApproveSignDataCtx77da62_ConnectMessageChanged(void* ptr);
void ApproveSignDataCtx77da62_DisconnectMessageChanged(void* ptr);
void ApproveSignDataCtx77da62_MessageChanged(void* ptr, struct Moc_PackedString message);
struct Moc_PackedString ApproveSignDataCtx77da62_RawData(void* ptr);
struct Moc_PackedString ApproveSignDataCtx77da62_RawDataDefault(void* ptr);
void ApproveSignDataCtx77da62_SetRawData(void* ptr, struct Moc_PackedString rawData);
void ApproveSignDataCtx77da62_SetRawDataDefault(void* ptr, struct Moc_PackedString rawData);
void ApproveSignDataCtx77da62_ConnectRawDataChanged(void* ptr);
void ApproveSignDataCtx77da62_DisconnectRawDataChanged(void* ptr);
void ApproveSignDataCtx77da62_RawDataChanged(void* ptr, struct Moc_PackedString rawData);
struct Moc_PackedString ApproveSignDataCtx77da62_Hash(void* ptr);
struct Moc_PackedString ApproveSignDataCtx77da62_HashDefault(void* ptr);
void ApproveSignDataCtx77da62_SetHash(void* ptr, struct Moc_PackedString hash);
void ApproveSignDataCtx77da62_SetHashDefault(void* ptr, struct Moc_PackedString hash);
void ApproveSignDataCtx77da62_ConnectHashChanged(void* ptr);
void ApproveSignDataCtx77da62_DisconnectHashChanged(void* ptr);
void ApproveSignDataCtx77da62_HashChanged(void* ptr, struct Moc_PackedString hash);
struct Moc_PackedString ApproveSignDataCtx77da62_Password(void* ptr);
struct Moc_PackedString ApproveSignDataCtx77da62_PasswordDefault(void* ptr);
void ApproveSignDataCtx77da62_SetPassword(void* ptr, struct Moc_PackedString password);
void ApproveSignDataCtx77da62_SetPasswordDefault(void* ptr, struct Moc_PackedString password);
void ApproveSignDataCtx77da62_ConnectPasswordChanged(void* ptr);
void ApproveSignDataCtx77da62_DisconnectPasswordChanged(void* ptr);
void ApproveSignDataCtx77da62_PasswordChanged(void* ptr, struct Moc_PackedString password);
struct Moc_PackedString ApproveSignDataCtx77da62_FromSrc(void* ptr);
struct Moc_PackedString ApproveSignDataCtx77da62_FromSrcDefault(void* ptr);
void ApproveSignDataCtx77da62_SetFromSrc(void* ptr, struct Moc_PackedString fromSrc);
void ApproveSignDataCtx77da62_SetFromSrcDefault(void* ptr, struct Moc_PackedString fromSrc);
void ApproveSignDataCtx77da62_ConnectFromSrcChanged(void* ptr);
void ApproveSignDataCtx77da62_DisconnectFromSrcChanged(void* ptr);
void ApproveSignDataCtx77da62_FromSrcChanged(void* ptr, struct Moc_PackedString fromSrc);
int ApproveSignDataCtx77da62_ApproveSignDataCtx77da62_QRegisterMetaType();
int ApproveSignDataCtx77da62_ApproveSignDataCtx77da62_QRegisterMetaType2(char* typeName);
int ApproveSignDataCtx77da62_ApproveSignDataCtx77da62_QmlRegisterType();
int ApproveSignDataCtx77da62_ApproveSignDataCtx77da62_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* ApproveSignDataCtx77da62___dynamicPropertyNames_atList(void* ptr, int i);
void ApproveSignDataCtx77da62___dynamicPropertyNames_setList(void* ptr, void* i);
void* ApproveSignDataCtx77da62___dynamicPropertyNames_newList(void* ptr);
void* ApproveSignDataCtx77da62___findChildren_atList2(void* ptr, int i);
void ApproveSignDataCtx77da62___findChildren_setList2(void* ptr, void* i);
void* ApproveSignDataCtx77da62___findChildren_newList2(void* ptr);
void* ApproveSignDataCtx77da62___findChildren_atList3(void* ptr, int i);
void ApproveSignDataCtx77da62___findChildren_setList3(void* ptr, void* i);
void* ApproveSignDataCtx77da62___findChildren_newList3(void* ptr);
void* ApproveSignDataCtx77da62___findChildren_atList(void* ptr, int i);
void ApproveSignDataCtx77da62___findChildren_setList(void* ptr, void* i);
void* ApproveSignDataCtx77da62___findChildren_newList(void* ptr);
void* ApproveSignDataCtx77da62___children_atList(void* ptr, int i);
void ApproveSignDataCtx77da62___children_setList(void* ptr, void* i);
void* ApproveSignDataCtx77da62___children_newList(void* ptr);
void* ApproveSignDataCtx77da62_NewApproveSignDataCtx(void* parent);
void ApproveSignDataCtx77da62_DestroyApproveSignDataCtx(void* ptr);
void ApproveSignDataCtx77da62_DestroyApproveSignDataCtxDefault(void* ptr);
char ApproveSignDataCtx77da62_EventDefault(void* ptr, void* e);
char ApproveSignDataCtx77da62_EventFilterDefault(void* ptr, void* watched, void* event);
void ApproveSignDataCtx77da62_ChildEventDefault(void* ptr, void* event);
void ApproveSignDataCtx77da62_ConnectNotifyDefault(void* ptr, void* sign);
void ApproveSignDataCtx77da62_CustomEventDefault(void* ptr, void* event);
void ApproveSignDataCtx77da62_DeleteLaterDefault(void* ptr);
void ApproveSignDataCtx77da62_DisconnectNotifyDefault(void* ptr, void* sign);
void ApproveSignDataCtx77da62_TimerEventDefault(void* ptr, void* event);
;
void TxListCtx77da62_ConnectClicked(void* ptr);
void TxListCtx77da62_DisconnectClicked(void* ptr);
void TxListCtx77da62_Clicked(void* ptr, int b);
struct Moc_PackedString TxListCtx77da62_ShortenAddress(void* ptr);
struct Moc_PackedString TxListCtx77da62_ShortenAddressDefault(void* ptr);
void TxListCtx77da62_SetShortenAddress(void* ptr, struct Moc_PackedString shortenAddress);
void TxListCtx77da62_SetShortenAddressDefault(void* ptr, struct Moc_PackedString shortenAddress);
void TxListCtx77da62_ConnectShortenAddressChanged(void* ptr);
void TxListCtx77da62_DisconnectShortenAddressChanged(void* ptr);
void TxListCtx77da62_ShortenAddressChanged(void* ptr, struct Moc_PackedString shortenAddress);
struct Moc_PackedString TxListCtx77da62_SelectedSrc(void* ptr);
struct Moc_PackedString TxListCtx77da62_SelectedSrcDefault(void* ptr);
void TxListCtx77da62_SetSelectedSrc(void* ptr, struct Moc_PackedString selectedSrc);
void TxListCtx77da62_SetSelectedSrcDefault(void* ptr, struct Moc_PackedString selectedSrc);
void TxListCtx77da62_ConnectSelectedSrcChanged(void* ptr);
void TxListCtx77da62_DisconnectSelectedSrcChanged(void* ptr);
void TxListCtx77da62_SelectedSrcChanged(void* ptr, struct Moc_PackedString selectedSrc);
int TxListCtx77da62_TxListCtx77da62_QRegisterMetaType();
int TxListCtx77da62_TxListCtx77da62_QRegisterMetaType2(char* typeName);
int TxListCtx77da62_TxListCtx77da62_QmlRegisterType();
int TxListCtx77da62_TxListCtx77da62_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* TxListCtx77da62___dynamicPropertyNames_atList(void* ptr, int i);
void TxListCtx77da62___dynamicPropertyNames_setList(void* ptr, void* i);
void* TxListCtx77da62___dynamicPropertyNames_newList(void* ptr);
void* TxListCtx77da62___findChildren_atList2(void* ptr, int i);
void TxListCtx77da62___findChildren_setList2(void* ptr, void* i);
void* TxListCtx77da62___findChildren_newList2(void* ptr);
void* TxListCtx77da62___findChildren_atList3(void* ptr, int i);
void TxListCtx77da62___findChildren_setList3(void* ptr, void* i);
void* TxListCtx77da62___findChildren_newList3(void* ptr);
void* TxListCtx77da62___findChildren_atList(void* ptr, int i);
void TxListCtx77da62___findChildren_setList(void* ptr, void* i);
void* TxListCtx77da62___findChildren_newList(void* ptr);
void* TxListCtx77da62___children_atList(void* ptr, int i);
void TxListCtx77da62___children_setList(void* ptr, void* i);
void* TxListCtx77da62___children_newList(void* ptr);
void* TxListCtx77da62_NewTxListCtx(void* parent);
void TxListCtx77da62_DestroyTxListCtx(void* ptr);
void TxListCtx77da62_DestroyTxListCtxDefault(void* ptr);
char TxListCtx77da62_EventDefault(void* ptr, void* e);
char TxListCtx77da62_EventFilterDefault(void* ptr, void* watched, void* event);
void TxListCtx77da62_ChildEventDefault(void* ptr, void* event);
void TxListCtx77da62_ConnectNotifyDefault(void* ptr, void* sign);
void TxListCtx77da62_CustomEventDefault(void* ptr, void* event);
void TxListCtx77da62_DeleteLaterDefault(void* ptr);
void TxListCtx77da62_DisconnectNotifyDefault(void* ptr, void* sign);
void TxListCtx77da62_TimerEventDefault(void* ptr, void* event);
;

#ifdef __cplusplus
}
#endif

#endif